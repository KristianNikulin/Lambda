{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Копия блокнота \"NumPy.ipynb\"","provenance":[{"file_id":"1-4KxkGLn9S0GDkFDK8D98HZxSTkUx_U6","timestamp":1632484444867}],"collapsed_sections":["MFKSC2UUA7Ne","Mth2u7nzAiqw","JrEY8hzdfmM2","mrm41pzufmNy","2kJObRBHfmOd","ylh_09YIfmOg","QeBH-jT4fmOy"]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.4"}},"cells":[{"cell_type":"markdown","metadata":{"id":"BsNwjQDRfmLY"},"source":["## Библиотека Numpy"]},{"cell_type":"markdown","metadata":{"id":"wu6r1-s7fmLe"},"source":["---"]},{"cell_type":"markdown","metadata":{"id":"zxRIdPO9gYyX"},"source":["При работе с предыдущими ноутбуками вы познакомились с основами языка Python. Узнали, что Python -- довольно простой, понятный язык программирования, научились пользоваться jupyter notebook'ом и оценили плюсы и возможности python+jupyter -- написание кода в отдельных ячейках и последовательный запуск кода в ячейках.\n","\n","Но есть и обратная сторона медали -- Python очень медленный язык. Возможно, пока что это было не очень заметно, потому что мы не работали с большими массивами данных. Но в эпоху big data, при работе с огромными массивами данных даже небольшое отставание языка программирования по скорости становится заметно и критично. Есть, конечно, языки программирования, которые работают намного быстрее (например, С++), но они гораздо сложнее в написании и не интерпретируемы, а компилируемы (то есть, в jupyter notebook'е с такими языками работать бы не получилось). \n","\n","Как же найти компромисс? Ответ прост: написать python-библиотеку для работы с массивами данных, функции которой будут написаны на очень быстром языке С++, но которую можно было бы использовать из Python. Эта библиотека называется **NumPy** (НамПай)."]},{"cell_type":"markdown","metadata":{"id":"BA9Po-oLfmLh"},"source":["Пакет `numpy` предоставляет интерфейс для работы с $n$-мерными массивами. В `numpy` реализовано множество всевозможных операций над массивами в целом. Если задачу можно решить, произведя некоторую последовательность операций над массивами, то с помощью numpy в python это будет столь же эффективно, как в `C` или `matlab`.\n","\n","Конечно, тот факт, что код numpy написан на С++, накладывает некоторые ограничения на массивы этой библиотеки: в любом numpy-массиве могут храниться элементы только одного типа: например, все float или все string (как вы помните с прошлого урока, в обычном pythonв массивах могут быть элементы совершенно разных типов)"]},{"cell_type":"markdown","metadata":{"id":"clwpHv-Zk0qV"},"source":["Этот ноутбук полностью посвещен знакомству с библиотекой numpy и работе с ней"]},{"cell_type":"markdown","metadata":{"id":"0_vHg4rzfmLi"},"source":["## Одномерные массивы"]},{"cell_type":"markdown","metadata":{"id":"MFKSC2UUA7Ne"},"source":["### Создание массива "]},{"cell_type":"code","metadata":{"id":"6DzqLBjjfmLk"},"source":["# принято, что numpy импортируют именно так\n","import numpy as np"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"NTtvvXC6fmLq"},"source":["Как же завести массив в numpy?\n","\n","Очень просто! Надо всего лишь перевести обычный python list в np.array:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u6O_T130fmLs","executionInfo":{"status":"ok","timestamp":1632324145321,"user_tz":-180,"elapsed":10,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"35a40b84-470c-429e-8594-725e7043e462"},"source":["# 'перевести' python list в np.array -- это обернуть массив в np.array()\n","a = np.array([3, 4, 1])\n","print(a)\n","type(a)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[3 4 1]\n"]},{"output_type":"execute_result","data":{"text/plain":["numpy.ndarray"]},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","metadata":{"id":"y2U8lTuYfmLz"},"source":["Обычный питоновский `print` печатает массивы в удобной форме (точно так же, как и list питона)"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gtJ0bdn5fmL1","executionInfo":{"status":"ok","timestamp":1632324145321,"user_tz":-180,"elapsed":6,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"4e126cb2-e9ff-4bf5-dfd9-7c105c988792"},"source":["print(a)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[3 4 1]\n"]}]},{"cell_type":"markdown","metadata":{"id":"Mth2u7nzAiqw"},"source":["### Типы данных в массивах np.array"]},{"cell_type":"markdown","metadata":{"id":"zbAeCr5HfmMJ"},"source":["Поговорим о типах данных, хранящихся в массивах:\n","\n","Чаще всего мы будем работать с числовыми массивами, поэтому поговорим о инх.\n","\n","В отличие от чистого питона, в `numpy` есть несколько типов для целых чисел (`int16`, `int32`, `int64`) и чисел с плавающей точкой (`float32`, `float64`). Они отличаются тем, с какой точностью в памяти хранятся элементы массива. \n","\n","Чтобы посмотреть, какой тип у вашего массива, можно вывести его dtype:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"ga8UJa7yfmMK","executionInfo":{"elapsed":687,"status":"ok","timestamp":1556908888449,"user":{"displayName":"Tatiana Gaintseva","photoUrl":"https://lh6.googleusercontent.com/-8CX4gk2wqJg/AAAAAAAAAAI/AAAAAAAAAAk/y13ijTBP8WM/s64/photo.jpg","userId":"12353702982477031617"},"user_tz":-180},"outputId":"7c1db2bb-c90f-48b8-a46d-e522b5373f55"},"source":["a.dtype"],"execution_count":null,"outputs":[{"data":{"text/plain":["dtype('int64')"]},"execution_count":6,"metadata":{"tags":[]},"output_type":"execute_result"}]},{"cell_type":"markdown","metadata":{"id":"A3nr3k6F-4HT"},"source":["Конечно, можно скастовать массив из одного типа в другой. \n","\n","Давайте переведем наш массив 'a' из типа np.int64 в тип np.float32:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KiuqdCAi-3kw","executionInfo":{"status":"ok","timestamp":1632324288509,"user_tz":-180,"elapsed":322,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"bfc1588b-3d56-4e14-bcf6-e0b7687dc0a6"},"source":["a = a.astype(np.float32)\n","a.dtype"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('float32')"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"E4doUPKdAGqm"},"source":["Далее мы будем рассматривать n-мерный массивы, для них преобразование типов работает так же. И для них все еще все элементы должны иметь одинаковый тип."]},{"cell_type":"markdown","metadata":{"id":"ocm0D55sA3cg"},"source":["### Изменение массивов np.array"]},{"cell_type":"markdown","metadata":{"id":"3_7c9NLTfmMM"},"source":["Как и list в питоне, массивы np.array - изменяемые объекты. Механика изменений значений в них такая же, как у питоновских list'ов. Давайте в этом убедимся:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"30ibLJJ-fmMM","executionInfo":{"status":"ok","timestamp":1632324307480,"user_tz":-180,"elapsed":371,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"d7ac52a8-5610-4d71-e5f1-90814c91029d"},"source":["a = np.array([3, 4 ,1])\n","\n","a[1] = 3\n","print(a)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[3 3 1]\n"]}]},{"cell_type":"markdown","metadata":{"id":"Hi9VSwT-Dit1"},"source":["Единственный (но логичный) нюанс: при изменении значения в массиве с элементами одного типа на элемент другого типа новый элемент будет приведен к типу массива:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mq4wMhLIECvh","executionInfo":{"status":"ok","timestamp":1632324331313,"user_tz":-180,"elapsed":302,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"bf9b6ec5-e576-46c8-b743-e37e29a7f0e4"},"source":["# или: a = np.array([3, 4 ,1], dtype=np.int64)\n","a = np.array([3, 4 ,1]).astype(np.int64)\n","\n","# значение 3.5 будет приведено к типу int64, т.е. станет 3\n","a[1] = 3.5\n","print(a)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[3 3 1]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"8Ju5yEg2EPl3","executionInfo":{"elapsed":655,"status":"ok","timestamp":1556909994711,"user":{"displayName":"Tatiana Gaintseva","photoUrl":"https://lh6.googleusercontent.com/-8CX4gk2wqJg/AAAAAAAAAAI/AAAAAAAAAAk/y13ijTBP8WM/s64/photo.jpg","userId":"12353702982477031617"},"user_tz":-180},"outputId":"a76f7b0a-9bd4-4400-dcd4-3a83608e6a91"},"source":["# обратите внимание -- если создается np.array с чисоами разных типов (int и float), \n","# то все числа будут приведены к более точному типу, т.е. float\n","# таким образом, 1 из целого числа станет числом с плавающей точкой 1.\n","a = np.array([3., 4. ,1])\n","\n","# значение 5 будет приведено к типу int64, т.е. станет 5.\n","a[1] = 5\n","print(a)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[3. 5. 1.]\n"]}]},{"cell_type":"markdown","metadata":{"id":"TuZIz7kDEWCM"},"source":["А вот добавить к массиву новый элемент в конец чуть сложнее, чем у list. Напримним, в list это делалось с помощью метода .append(). В numpy это также делается с помощью append, но чуть по-другому:\n","\n","Обратите внимание, что в numpy при append *создается новый массив*, а не происходит добавление элемента в уже существующий массив. Поэтому не рекомендуется создавать массивы с помощью append в numpy."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"2m_G3Op6EtCR","executionInfo":{"elapsed":614,"status":"ok","timestamp":1556910277887,"user":{"displayName":"Tatiana Gaintseva","photoUrl":"https://lh6.googleusercontent.com/-8CX4gk2wqJg/AAAAAAAAAAI/AAAAAAAAAAk/y13ijTBP8WM/s64/photo.jpg","userId":"12353702982477031617"},"user_tz":-180},"outputId":"cd0cb866-2ad4-4410-f7b2-28e8a860e207"},"source":["a = np.array([3, 4 ,1])\n","\n","# вот так пишется append\n","a = np.append(a, 6)\n","\n","a"],"execution_count":null,"outputs":[{"data":{"text/plain":["array([3, 4, 1, 6])"]},"execution_count":13,"metadata":{"tags":[]},"output_type":"execute_result"}]},{"cell_type":"markdown","metadata":{"id":"dZDih28zO0AZ"},"source":[""]},{"cell_type":"markdown","metadata":{"id":"51Tpu4P5O2JQ"},"source":["## Многомерные массивы"]},{"cell_type":"markdown","metadata":{"id":"D2I34jDFO7x0"},"source":["Мы узнали, как создавать и изменять одномерные массивы, как они выглядят в numpy и нюансы приведения типов. Настало время познакомиться с многомерными массивами.\n","\n","Многомерный массив -- это массив, элементы которого тоже массивы. В принципе, ничего нового, все как и у list в питоне. "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NluLEVL6VbfT","executionInfo":{"status":"ok","timestamp":1632324404438,"user_tz":-180,"elapsed":479,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"94467116-fe34-4662-e2b9-5fb9a5bb50f3"},"source":["two_dim_array = np.array([[2, 3], [4, 5]])\n","\n","print(two_dim_array)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[2 3]\n"," [4 5]]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Se33FrJDHjGv","executionInfo":{"status":"ok","timestamp":1632324450267,"user_tz":-180,"elapsed":332,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"095be60c-e7b9-4d29-ddcf-cd7426e40ce7"},"source":["two_dim_array[0][0]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6HIBtdA_VizU","executionInfo":{"status":"ok","timestamp":1632324404439,"user_tz":-180,"elapsed":12,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"b2ca8bd7-69e6-45bc-e101-090e7d6c4b9f"},"source":["three_dim_array = np.array([[[2, 3], [4, 5]], [[5, 6], [7, 8]]])\n","\n","print(three_dim_array)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[[2 3]\n","  [4 5]]\n","\n"," [[5 6]\n","  [7 8]]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"UAPCq4dmWQRU"},"source":["Напомним, что в numpy, неважно, в одномерном или многомерном массиве, *все* элементы имеют одинаковый тип\n","\n","Давайте в этом убедимся:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NV7tM_8IXkkS","executionInfo":{"status":"ok","timestamp":1632324464119,"user_tz":-180,"elapsed":298,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"22684525-8347-4b17-d1fc-1f87fab32def"},"source":["# 2 и 3 приведутся к типу чисел 4. и 5., т.е. float64\n","a = np.array([[2, 3], [4., 5.]])\n","print(a, a.dtype)\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[2. 3.]\n"," [4. 5.]] float64\n"]}]},{"cell_type":"markdown","metadata":{"id":"9LH7l4YFWJl-"},"source":["### Информация о массиве"]},{"cell_type":"code","metadata":{"id":"84HDTakDVqjm"},"source":["Теперь научимся получать основную информацию о массиве"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"JrEY8hzdfmM2"},"source":["## Операции над одномерными массивами\n"]},{"cell_type":"markdown","metadata":{"id":"vbjIN8IrOk3t"},"source":[" ### Арифметические операции"]},{"cell_type":"code","metadata":{"id":"hJfC6mEUfmM2"},"source":["a = np.array([2, 5, 6, 7])\n","b = np.array([9, 7, 8, 9])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"SyhreThiOqhx"},"source":["С двумя массивами одинаковой "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EmlV4Cn2fmM3","executionInfo":{"status":"ok","timestamp":1632324488432,"user_tz":-180,"elapsed":7,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"f60cfce0-3a18-47ff-8fa6-b7744127e2b8"},"source":["print(a + b)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[11 12 14 16]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hFgqEFPdfmM4","executionInfo":{"status":"ok","timestamp":1632324489748,"user_tz":-180,"elapsed":7,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"7c328b6b-da2f-4613-c6f5-e495b136743a"},"source":["print(a - b)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[-7 -2 -2 -2]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TdCSYDsUfmM5","executionInfo":{"status":"ok","timestamp":1632324491709,"user_tz":-180,"elapsed":297,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"6e8d1277-8f6a-4c2d-b193-ed1ca8bf5c73"},"source":["print(a * b)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[18 35 48 63]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iM1VgL_AfmM6","executionInfo":{"status":"ok","timestamp":1632324495380,"user_tz":-180,"elapsed":340,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"671cd0cd-0a6a-4bb9-ea07-857741e21837"},"source":["print(a / b)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.22222222 0.71428571 0.75       0.77777778]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fhYQugrafmM8","executionInfo":{"status":"ok","timestamp":1632324497973,"user_tz":-180,"elapsed":341,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"8616c750-c6c6-423b-fcd4-d72ef2aa93e2"},"source":["print(a ** 2)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 4 25 36 49]\n"]}]},{"cell_type":"markdown","metadata":{"id":"u-nODxC_fmM_"},"source":["`numpy` содержит элементарные функции, которые тоже применяются к массивам поэлементно. Они называются универсальными функциями (`ufunc`)."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q4AVx4JbfmM_","executionInfo":{"status":"ok","timestamp":1632324526456,"user_tz":-180,"elapsed":353,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"046a9b8d-e671-489a-ea43-ea496f1a2958"},"source":["np.sin, type(np.sin)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<ufunc 'sin'>, numpy.ufunc)"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"UlD1i1ucfmNA","outputId":"333948f2-cab8-4305-dbff-390547609325"},"source":["print(np.sin(a))\n","print(np.cosh(a))"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[ 0.90929743 -0.95892427 -0.2794155   0.6569866 ]\n","[  3.76219569  74.20994852 201.71563612 548.31703516]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zepuLqJnH7k7","executionInfo":{"status":"ok","timestamp":1632324561835,"user_tz":-180,"elapsed":290,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"3e416a4c-7ef2-4d1e-e1aa-114025345fd3"},"source":["np.exp(2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["7.38905609893065"]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","metadata":{"id":"rcOgTOV9fmNB"},"source":["Один из операндов может быть скаляром, а не массивом."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"evAWu0mtfmNB","executionInfo":{"status":"ok","timestamp":1632324566707,"user_tz":-180,"elapsed":330,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"02001959-30d7-40c6-93b7-bff204a87a44"},"source":["a"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([2, 5, 6, 7])"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VvT9aNIXfmND","executionInfo":{"status":"ok","timestamp":1632324567035,"user_tz":-180,"elapsed":8,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"b3691e3b-7752-46d3-8d2f-8be357c2e14d"},"source":["print(a + 1)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[3 6 7 8]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qVBR-7oMfmNF","executionInfo":{"status":"ok","timestamp":1632324569350,"user_tz":-180,"elapsed":6,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"e530686b-50fb-4cb7-d644-6460cfd1ac0b"},"source":["print(2 * a)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 4 10 12 14]\n"]}]},{"cell_type":"markdown","metadata":{"id":"UjhN4lHGfmNG"},"source":["Сравнения дают булевы массивы."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pu3FPoK-fmNG","executionInfo":{"status":"ok","timestamp":1632324591913,"user_tz":-180,"elapsed":324,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"576c3abe-b5d2-41f5-c703-e5b940133c62"},"source":["print(a > b)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[False False False False]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aQ2NQc0DfmNH","executionInfo":{"status":"ok","timestamp":1632324593136,"user_tz":-180,"elapsed":5,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"fe072c30-226c-46c8-e13e-3d1654a26b02"},"source":["print(a < b)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[ True  True  True  True]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K6JjG8YXfmNI","executionInfo":{"status":"ok","timestamp":1632324595728,"user_tz":-180,"elapsed":12,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"4bb8e867-eb61-43c0-d36f-53e437090d8b"},"source":["print(a == b)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[False False False False]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fC4mG93EfmNK","executionInfo":{"status":"ok","timestamp":1632324643040,"user_tz":-180,"elapsed":291,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"4e099eee-12ec-46e5-97f5-4e0dd4aedc47"},"source":["c = a > 5\n","print(c)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[False False  True  True]\n"]}]},{"cell_type":"markdown","metadata":{"id":"1B7KJ7O-fmNL"},"source":["Кванторы \"существует\" и \"для всех\"."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UXQgvtZcfmNL","executionInfo":{"status":"ok","timestamp":1632324644089,"user_tz":-180,"elapsed":4,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"8efb432c-9e5c-4030-a9a8-5460e9025d96"},"source":["np.any(c), np.all(c)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(True, False)"]},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","metadata":{"id":"SGteTpYBfmNM"},"source":["Модификация на месте."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lritBIg0fmNN","executionInfo":{"status":"ok","timestamp":1632324659015,"user_tz":-180,"elapsed":492,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"baecc3e8-0bb3-41d6-b92b-2737785dec45"},"source":["a += 1\n","print(a)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[3 6 7 8]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c3n8Y23hfmNO","executionInfo":{"status":"ok","timestamp":1632324659015,"user_tz":-180,"elapsed":5,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"f86e3f24-7b57-4207-f549-da553c0d7c2b"},"source":["b *= 2\n","print(b)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[18 14 16 18]\n"]}]},{"cell_type":"code","metadata":{"id":"VRJqCFK3fmNP","outputId":"4a84296c-ba91-4b23-da3d-3dc14e4c1700"},"source":["b /= a\n","print(b)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[ 0.          3.90243902  7.61904762 11.1627907  14.54545455]\n"]}]},{"cell_type":"markdown","metadata":{"id":"9pQ60AqPfmNQ"},"source":["При выполнении операций над массивами деление на 0 не возбуждает исключения, а даёт значения `np.nan` или `np.inf`."]},{"cell_type":"code","metadata":{"id":"ltwGc-bofmNR","outputId":"b9ce9bf4-37cc-49b2-ddd4-c8e2086187ac"},"source":["np.nan + 1, np.inf + 1, np.inf * 0, 1. / np.inf"],"execution_count":null,"outputs":[{"data":{"text/plain":["(nan, inf, nan, 0.0)"]},"execution_count":45,"metadata":{"tags":[]},"output_type":"execute_result"}]},{"cell_type":"markdown","metadata":{"id":"ITxex6KQfmNS"},"source":["Сумма и произведение всех элементов массива; максимальный и минимальный элемент; среднее и среднеквадратичное отклонение."]},{"cell_type":"code","metadata":{"id":"x7j0UYGnfmNS","outputId":"32926b56-e460-409e-a085-cc407cb58f09"},"source":["b.sum(), b.prod(), b.max(), b.min(), b.mean(), b.std()"],"execution_count":null,"outputs":[{"data":{"text/plain":["(33, 4536, 9, 7, 8.25, 0.82915619758885)"]},"execution_count":52,"metadata":{"tags":[]},"output_type":"execute_result"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_lHBH_bzfmNT","executionInfo":{"status":"ok","timestamp":1632324761267,"user_tz":-180,"elapsed":269,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"f285d012-6c58-4a47-9f25-da6718151c42"},"source":["x = np.random.normal(size=1000)\n","x.mean(), x.std()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.03896252357638703, 1.000200029613634)"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h3KrQIEDfmNU","executionInfo":{"status":"ok","timestamp":1632324767333,"user_tz":-180,"elapsed":311,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"3aa46b10-7435-41a5-898f-831526133d5a"},"source":["x"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-2.37638460e-01, -2.41685439e-01,  2.05724428e-01,  5.01005739e-01,\n","        1.42005080e+00,  2.45062731e-01,  1.03842948e+00,  1.66320998e+00,\n","       -4.32409810e-01,  1.40359034e+00,  5.01054759e-01, -1.11948035e+00,\n","        4.97280364e-02, -3.61861823e-01, -1.01226999e+00, -1.56905706e+00,\n","       -9.14388508e-01,  9.04496224e-01, -3.24296335e-01, -6.54300347e-01,\n","        8.35776120e-01,  5.65565978e-01,  8.56758361e-01,  8.35109180e-01,\n","        1.11606381e+00, -1.31660901e-01, -2.83593902e-03,  1.08126202e+00,\n","        1.35788318e+00,  3.10117362e-01, -2.19703920e+00,  1.44318512e+00,\n","        9.14409974e-01,  6.33977517e-01,  1.58491277e+00, -9.85278521e-01,\n","       -1.05214284e+00, -9.12994626e-01,  3.14624074e-01,  2.06933346e+00,\n","        3.35972830e-01, -5.24990933e-01, -1.26933669e+00,  1.30782600e+00,\n","       -2.10363555e+00,  1.48007843e-01, -1.00691657e-01, -3.27514617e-01,\n","        2.44495587e-01,  6.31848645e-01,  1.01363916e+00,  6.28906106e-01,\n","        2.27586522e-01,  8.11306797e-01, -5.16603724e-01,  3.19873448e-01,\n","       -7.70769626e-03,  2.45683604e-01,  1.13256764e+00, -8.83190393e-01,\n","       -1.59715400e+00, -2.43330820e+00,  6.54351077e-01,  1.37913667e+00,\n","       -3.29787388e-01, -8.03426329e-01,  5.46524154e-01, -3.90407975e-01,\n","        2.06187387e+00,  4.94587991e-01,  1.79620705e+00, -2.47752365e-01,\n","       -4.16926324e-01,  7.49516621e-01, -7.89243222e-01,  7.30330132e-01,\n","       -3.84984342e-01, -1.66545680e-01, -1.85481309e+00,  8.64255670e-01,\n","        6.77005386e-01,  2.68708365e-01, -1.02240363e+00, -6.50518800e-01,\n","        5.64070426e-02,  5.52197574e-01, -2.02633257e+00,  8.94356571e-01,\n","        6.38028086e-01, -1.14588144e-01,  2.49311710e-01, -6.61313370e-01,\n","        1.64660548e-01,  1.54542650e+00,  3.18100390e-01, -1.44009348e-01,\n","       -2.92247833e-01,  2.34645069e+00,  1.68717902e+00,  6.63295959e-01,\n","       -6.92831022e-01,  6.73809699e-01, -1.10793237e+00, -8.49022743e-01,\n","        2.11327845e-01, -4.62647296e-01, -1.57509871e+00, -1.60925007e+00,\n","        7.81099340e-02,  5.22817100e-01,  1.03016378e+00,  2.26941032e+00,\n","       -3.36125787e-01,  9.87455654e-01,  2.04748069e-02,  6.42159823e-01,\n","        1.05024973e+00,  3.42684720e-02,  1.20115163e-01, -1.01606040e-01,\n","        2.34481782e+00,  4.01297788e-01, -2.50026707e+00, -2.57593689e+00,\n","        7.54652768e-01, -1.42213935e+00, -1.26533360e+00,  5.96033801e-01,\n","       -1.35508210e-01,  2.78652016e-01,  8.00260969e-01, -1.07648523e+00,\n","        8.19130832e-01,  7.00522737e-01, -1.03406925e+00, -1.04832497e-01,\n","       -2.79484335e-02, -9.92075186e-02,  1.30122323e-01,  6.84574460e-01,\n","        1.75122475e-01, -6.74729567e-02,  5.99121630e-01,  8.58266978e-01,\n","        5.02926787e-01, -2.60217117e-01,  1.23676243e+00, -1.20130095e-01,\n","       -2.78103040e+00,  1.66040804e-01, -9.32991714e-01,  2.78606656e-01,\n","        9.38768824e-01, -8.43762475e-01,  7.03430026e-01,  6.28350778e-01,\n","        1.72289451e+00, -5.29219964e-01, -1.17827086e+00, -6.06521080e-01,\n","        3.56959623e-01,  1.92833342e-01, -9.91870155e-01,  1.63208245e+00,\n","       -6.56935337e-02, -2.25693889e+00,  1.22259721e-01, -1.14704624e+00,\n","       -1.91093835e-01, -1.05538094e+00,  7.36184184e-01, -1.85298630e+00,\n","        9.92782651e-01, -8.02755612e-01, -9.07734243e-02,  3.54245838e-01,\n","        2.46169715e+00,  8.04455228e-02,  7.43075669e-02,  1.17622703e-01,\n","        1.19806736e+00, -8.78843179e-01,  4.52338129e-01, -2.63885429e-01,\n","        7.97390644e-01,  4.30300117e-01,  1.45366924e+00,  7.62497812e-01,\n","        4.81831914e-01,  7.28319949e-01,  7.46923899e-01,  1.28234549e+00,\n","        2.54499831e-02, -4.81476833e-01,  3.41068900e-01,  2.98927458e-01,\n","       -2.01081356e-01, -2.20651728e+00,  6.42002175e-01, -7.92836766e-02,\n","        2.45405330e-01,  1.14435165e+00,  5.71002607e-01,  7.69237000e-01,\n","        5.32149967e-01, -1.83453658e+00, -8.62920102e-01, -1.50833772e+00,\n","        6.66136073e-01, -1.85555373e+00, -2.00547752e-01, -8.71883765e-01,\n","        7.28595792e-01,  1.53315296e+00, -4.42780794e-01,  6.02700183e-01,\n","        2.41303365e-01,  2.80827193e-01, -1.36119235e+00, -3.64500325e-01,\n","        1.06696104e+00, -1.55466740e-01,  6.21118977e-01,  2.49807149e-01,\n","       -1.52330292e-01,  4.53408155e-01, -4.88104061e-01,  1.85893226e+00,\n","        1.11601118e+00,  1.39113706e-01, -9.68730163e-01, -4.76191097e-01,\n","       -7.60690997e-02,  1.53328293e-01, -1.25005298e+00, -2.13086426e-01,\n","        3.53891118e-01,  1.21074858e+00,  3.62569332e-01, -1.07211159e+00,\n","        2.50110093e+00,  7.72473374e-01, -1.15588348e+00,  1.25567885e+00,\n","       -3.28508627e-01, -9.31148438e-01,  4.57539838e-02, -7.50342824e-02,\n","        1.84720836e-01, -1.45895186e+00,  2.62621072e-01,  1.16284138e-01,\n","       -1.83947827e+00,  2.00800058e+00, -7.14778824e-01, -2.44099525e-01,\n","        5.89449686e-01, -1.05489038e+00,  6.69763273e-01,  1.24130031e+00,\n","        3.94907768e-01,  1.62493552e+00, -8.46906715e-01, -5.22621853e-01,\n","       -1.02236144e+00,  6.45542512e-01,  9.36578840e-02, -2.99443553e-01,\n","       -1.70477944e-01, -1.29018948e-01,  3.81774977e-01, -3.72009096e-03,\n","       -1.33883390e+00, -6.85692626e-02, -3.34788789e-01, -1.04665566e-01,\n","        2.83788858e-01, -1.31832727e+00, -1.04293116e+00, -2.00938482e+00,\n","       -9.52490879e-01,  1.11079823e+00, -1.86994307e-01,  1.28281894e+00,\n","       -9.35942769e-01,  2.79548528e-01, -4.33441642e-03,  1.11939931e-01,\n","       -1.25806357e-01, -1.13057453e+00,  1.00047724e+00,  9.09104641e-01,\n","        1.70502004e+00,  4.51716311e-01,  1.36779687e+00, -4.61788686e-02,\n","       -1.22341570e-01, -8.34796588e-01, -4.11878247e-01, -1.34846739e-01,\n","        1.01920843e+00, -1.18851407e+00,  1.25572907e+00, -1.56370530e+00,\n","       -1.07341197e+00,  1.29840166e+00,  8.42070789e-02, -3.21006444e-01,\n","       -2.25341105e-01,  1.51099185e+00,  1.39222667e+00,  1.83175464e-01,\n","       -3.00987637e-01, -1.29777600e-01,  1.82483944e+00, -2.91205982e-01,\n","       -9.38723581e-02,  6.26296503e-01,  8.52196972e-01, -1.45984818e-01,\n","        1.45335622e+00,  1.28125553e+00, -1.36455620e+00, -2.77276190e-01,\n","       -1.19667372e+00,  6.58646092e-01, -3.41795824e-01, -2.49927030e-01,\n","       -1.91418643e+00,  3.63612809e-01, -4.79124966e-01,  4.50486532e-01,\n","        1.33451363e+00, -1.42349576e+00, -1.13484121e+00,  1.10868751e+00,\n","       -1.65065605e-01,  9.61441571e-01, -1.82334687e+00, -1.48200788e+00,\n","        5.74369315e-01, -1.73014683e-01,  2.37060690e-01, -1.16347891e+00,\n","        1.78759809e+00, -4.02446683e-01,  1.80523321e+00,  7.73503781e-01,\n","        2.75047302e+00,  1.30796299e+00, -1.10052072e+00, -9.78451233e-01,\n","       -1.75893191e+00, -9.10717261e-01,  4.05609904e-01,  2.08468790e+00,\n","       -2.93524969e+00, -1.04811062e+00, -6.71377564e-01,  4.66902765e-02,\n","       -1.39962416e+00,  4.49337207e-01, -7.49689845e-02,  7.13335108e-01,\n","       -6.94090312e-01, -1.73753681e-01,  2.01487815e+00,  1.14042114e+00,\n","       -7.72954797e-01, -1.66372568e+00,  2.53885708e+00,  1.10831822e+00,\n","       -3.76268749e-01,  8.00678755e-01,  3.49582141e-01,  8.39180983e-01,\n","        1.28402681e+00,  1.31293270e+00,  6.33171692e-01, -7.41188728e-02,\n","       -1.76123840e+00,  1.09920572e+00, -5.06964637e-01, -1.07478735e+00,\n","       -1.76083091e+00,  2.94923784e-01,  1.48677464e+00, -2.60982816e+00,\n","       -3.31014060e-01, -5.65186634e-01,  3.48106655e-01,  1.25631041e+00,\n","        1.04507506e+00, -1.49013543e+00, -1.98232089e-02, -1.09277575e+00,\n","        4.38111705e-01, -4.47996060e-01, -8.19538436e-01,  6.23186930e-01,\n","       -4.78315255e-01, -5.07153683e-01, -6.57039654e-01, -5.46961024e-01,\n","        7.40696128e-01,  2.39867437e-01, -1.95242680e-02,  3.18509860e-01,\n","        4.44810776e-01,  7.68745470e-01, -3.01984875e-01,  9.50917091e-01,\n","       -1.18261166e+00,  1.61036525e-01, -8.61558675e-01, -5.21083408e-01,\n","       -3.27647586e-01, -1.18133700e+00,  2.29095193e-01, -4.91001476e-01,\n","        6.21902815e-01,  5.38509140e-01,  1.14537177e+00,  1.29101345e+00,\n","       -2.07400812e+00, -9.05226142e-01, -1.47480718e+00,  1.50689616e+00,\n","        1.07334976e+00,  5.37338994e-01, -5.82491714e-02, -6.29737417e-01,\n","       -2.98583498e-01,  1.61637657e+00,  7.41653614e-01,  5.89142994e-01,\n","       -1.29364177e+00, -1.96669676e-01,  3.19016837e-01,  2.54960233e-01,\n","        6.00096542e-02, -2.28814736e-01, -6.77835277e-01, -3.10142949e-01,\n","        2.13904816e+00,  1.67024719e-01, -9.61789931e-03,  1.03061292e+00,\n","        3.45439931e-01,  9.92010069e-01, -3.47353822e-01, -1.32344984e+00,\n","        8.96728043e-02,  1.12445506e+00,  2.98943656e-01,  1.02487477e+00,\n","        1.49853591e+00, -7.02738326e-01, -1.39637371e+00,  6.19236962e-01,\n","        3.38427628e-01,  6.58169820e-01, -5.35510695e-01,  9.83428317e-01,\n","       -2.52913091e-02,  1.60331439e+00, -9.61631978e-01, -2.06198082e-01,\n","        2.35323095e-01,  1.24731784e+00, -7.60677854e-01, -1.57751636e+00,\n","        1.53882515e+00,  4.80914071e-01, -7.66823740e-01,  1.29563401e+00,\n","       -1.07499100e-02,  1.10045785e+00,  2.36730204e-01, -2.75067946e-01,\n","        3.81223993e-01, -1.54299453e-01,  2.71468770e-01,  8.15102538e-01,\n","       -2.10714565e-01, -2.95753991e-01,  8.07180700e-01,  1.21992845e+00,\n","       -3.39455165e-01, -9.69666555e-02,  2.46970655e-01,  1.82674495e-01,\n","       -1.31897054e+00, -1.62738345e+00,  1.68675011e-01, -5.95451005e-01,\n","        2.48051498e-01, -7.06308711e-02, -1.22082038e-02, -1.15742490e+00,\n","        1.24709771e+00, -1.78455794e-02, -7.91989192e-01, -2.93216845e-02,\n","        7.69546236e-01, -1.36137959e+00, -1.51589429e+00, -5.00173368e-01,\n","       -1.67430907e+00, -9.59436542e-02, -7.91476839e-01, -9.17981009e-01,\n","       -5.88374852e-01,  4.44103015e-01,  1.43801939e+00,  1.02481797e+00,\n","        6.70381514e-02, -8.35685179e-01,  7.50637500e-02, -4.37457985e-01,\n","       -6.15669422e-01, -1.25445404e+00,  1.51373221e+00,  1.64098658e+00,\n","       -8.15481815e-01,  7.51390894e-01, -7.76510955e-01,  8.87883415e-01,\n","       -1.16793701e+00,  2.51255979e+00,  2.65727437e-01,  1.85695697e+00,\n","        7.69073905e-01,  1.49058515e+00,  3.62402105e-01, -2.99948622e-01,\n","       -1.62536226e+00,  1.02896074e+00, -7.04945737e-01,  1.89295133e+00,\n","       -1.18649382e+00, -4.46463036e-01, -4.95750289e-01,  1.10720170e+00,\n","       -8.09923417e-01,  3.86036863e-01, -7.02301317e-01, -1.65438996e-01,\n","       -2.49755619e-01,  4.23991713e-01,  5.63398860e-01,  1.27098665e-01,\n","       -1.01466898e+00,  1.09163731e+00,  2.02304758e+00, -1.98134227e+00,\n","        9.26164955e-01, -1.09784339e+00, -4.08970847e-01, -4.30932610e-01,\n","       -1.01245033e+00, -2.68955810e-01, -4.31623213e-01,  4.75544678e-01,\n","        1.54699772e-01, -1.26985342e+00, -1.73885686e-01,  4.86416513e-01,\n","        1.40338974e+00,  3.51355779e-01,  7.30649679e-01, -7.09008817e-01,\n","       -5.01870044e-01, -4.13395046e-01, -7.91077626e-01,  3.16905463e-01,\n","       -4.25337692e-01,  9.79446843e-01,  1.10195294e+00,  3.80070588e-01,\n","        2.30728676e-01,  1.89477896e-01,  5.83685757e-02,  3.70172791e-01,\n","        2.26312554e-01,  2.74963050e-01, -1.61298746e+00, -6.59678217e-01,\n","        2.05055074e+00, -8.33824172e-02,  1.74279849e+00, -4.84699985e-01,\n","        1.21995571e+00, -1.08691443e-01,  4.18353284e-01,  2.53550410e-01,\n","       -2.21095463e-01,  6.09302882e-01,  4.22638836e-01,  2.17203610e-01,\n","       -3.39033242e-01,  1.17930995e+00,  1.09378436e+00, -2.30117178e-01,\n","       -6.14829840e-02,  8.69695653e-01,  1.09955853e+00, -5.41824156e-02,\n","        1.10823809e-01,  2.56798747e-01,  9.15711625e-01,  5.58996190e-01,\n","        3.75291083e-01,  9.15168766e-01, -1.82166415e+00,  1.89401294e+00,\n","        2.28706678e-01, -3.75552531e-01, -1.53014406e+00, -3.72900667e-01,\n","        1.41402292e+00, -9.30492448e-01,  1.22840538e+00,  6.98784837e-01,\n","       -6.10232687e-01,  1.13069029e+00,  1.19406829e-01,  1.08315376e+00,\n","       -9.85568219e-01, -1.32716936e+00,  7.87920292e-01,  8.10953953e-01,\n","       -1.36909085e+00, -2.81103424e-01, -1.24374819e-01,  9.35529892e-02,\n","        2.10664257e+00, -3.12194468e-01, -9.93671965e-02, -1.31533531e+00,\n","        1.00976820e+00,  1.26221341e+00, -1.65563702e+00,  1.13298500e+00,\n","        1.28864848e-01, -6.03732918e-01, -5.42862550e-02, -2.09296244e+00,\n","       -3.42445232e-01,  3.82531064e-01, -1.47750643e+00, -4.42785234e-01,\n","        5.99031019e-01, -2.99166843e-01,  2.98448137e-01,  3.72994790e-01,\n","        2.46415109e-01,  3.19286343e-01,  6.37207930e-02, -6.50278843e-02,\n","        4.59922385e-01, -4.43517870e-01, -1.15862698e+00,  9.17927676e-02,\n","        7.99574653e-01, -7.50363703e-01, -1.29006811e+00, -1.01683011e-01,\n","       -1.49694447e+00, -1.84574486e-01, -1.06021496e+00,  7.63889473e-01,\n","       -8.96863912e-01,  1.84530473e+00,  1.72882559e-01,  1.67668213e+00,\n","       -2.53510460e-02,  1.89766583e-01,  1.19303640e-01,  5.94302821e-01,\n","       -1.13257673e+00,  2.64104989e-02,  7.52265655e-01, -1.13030001e+00,\n","        4.28604467e-01,  2.35103121e-01, -1.11722249e+00,  2.46032491e-01,\n","       -8.26626925e-01, -5.90952689e-01, -1.16800548e+00, -3.80936300e-01,\n","       -2.63882904e-01, -1.09561871e+00, -5.69041521e-01,  9.42701866e-01,\n","       -3.91828365e-01, -1.53222467e+00,  5.86600078e-01, -1.60794906e+00,\n","        7.63039404e-01, -8.29393133e-01,  1.18003063e+00, -2.89559760e-01,\n","       -1.47098886e+00,  1.19337538e+00,  2.22952040e-01, -7.13255791e-01,\n","        7.12807949e-02,  5.83907974e-01,  2.13837241e-01,  1.27348218e-01,\n","       -9.53100883e-01,  1.36981123e+00,  1.23362395e+00, -1.95496226e-01,\n","       -8.61301259e-02,  4.62970806e-01, -6.14831905e-01, -3.67005622e-01,\n","        1.10341411e+00,  4.12297245e-01,  2.99332480e-01, -1.33532918e+00,\n","        9.55534939e-01, -7.86208418e-01,  2.03365553e-01, -7.12899893e-01,\n","        1.12687857e+00,  4.61898540e-01, -1.24635692e+00,  1.96719470e-01,\n","       -1.04698950e+00, -2.94277944e-01, -7.23593188e-01,  1.27900457e+00,\n","        1.12525055e+00,  9.45900069e-01, -1.13428948e+00,  2.82789745e-01,\n","       -1.12230740e+00,  1.60153395e-01, -3.12657163e-01,  4.55298679e-01,\n","       -3.00290851e-01,  3.67095915e-01,  1.54022206e-01,  7.04550694e-01,\n","        1.45793486e+00,  2.02184126e-02, -9.98533275e-02, -1.57725160e+00,\n","       -5.84455145e-01, -2.35340328e+00,  1.82252340e+00,  1.05009987e+00,\n","        3.80524321e-01, -9.33703046e-01,  5.11939492e-01, -4.00892708e-01,\n","        3.93415622e-01,  1.11525756e+00, -1.91265320e+00,  7.79158004e-01,\n","        6.39118387e-02, -1.24417706e+00,  9.64638384e-02, -1.55942282e+00,\n","       -2.01218961e-01,  1.51957440e+00,  7.46463420e-01,  6.84020391e-01,\n","       -1.40061186e+00, -4.72249416e-01, -1.56967694e+00, -1.16477434e+00,\n","        3.93292585e-01, -2.88124398e-01,  8.38027355e-01, -1.50835438e+00,\n","       -7.39669142e-01,  1.75552407e+00,  9.75546165e-01, -5.38088426e-01,\n","        4.38182951e-01,  8.26200351e-01,  2.48215986e+00, -3.44197886e-01,\n","        1.80442778e-01,  1.01975404e+00,  5.34441431e-01, -1.11490027e+00,\n","        8.12304390e-01,  6.83402817e-01,  9.16827829e-01, -1.59813639e+00,\n","        1.79472280e+00,  1.06234850e+00,  2.08973449e+00,  4.55408108e-01,\n","       -1.59778440e-02,  1.33771381e+00,  8.00963075e-01,  5.24192131e-01,\n","        1.29899490e-01,  2.69450973e+00,  3.90067011e-02,  7.66240834e-01,\n","        1.81704008e+00, -3.41555724e-01,  6.54620714e-01, -6.49498295e-01,\n","       -1.02467366e+00,  2.41623783e-01, -7.62007538e-01,  3.45874492e-02,\n","        4.83693090e-03, -6.22823667e-01, -1.07009827e+00,  9.48193391e-01,\n","       -1.90720638e-01, -1.68575614e+00,  3.23151218e+00, -6.70731962e-01,\n","        9.98016873e-01, -1.17412744e-02, -3.09925783e-01, -2.03776260e+00,\n","       -3.53437100e-01, -7.82240622e-01, -2.27537033e-01,  5.54025427e-01,\n","       -3.24079226e-01,  1.07417068e-02,  3.28956879e-01,  1.26890641e+00,\n","        9.36324302e-01,  5.15146375e-01,  6.53653422e-02,  3.30636230e+00,\n","       -7.72258538e-01, -3.93531140e-01, -1.28652340e+00,  2.53410784e+00,\n","        2.33157746e-03,  5.50051440e-01,  4.70079294e-01, -6.27141645e-01,\n","       -1.59024411e+00, -2.93275055e-01,  1.64426003e+00, -6.56474129e-01,\n","        1.90005629e+00, -7.25211197e-01,  1.04611021e-02, -1.32144766e+00,\n","        1.26584163e+00,  7.45907892e-01, -1.52157312e+00,  9.98153064e-01,\n","       -3.82400555e-04, -8.65579408e-01,  1.09339808e+00,  5.20361688e-01,\n","       -2.13152306e+00,  2.73643775e+00, -1.01720249e+00, -1.61018538e-01,\n","       -3.11355860e-01, -3.24884119e-01, -8.24574120e-01,  9.22620257e-01,\n","       -1.57628939e+00,  1.54138511e+00, -2.91954749e-01,  1.05300550e+00,\n","        1.11510224e+00, -5.87473933e-01, -1.04690223e+00,  3.43138669e-01,\n","       -7.18825524e-01,  5.24355345e-01,  4.10318784e-01,  5.60306020e-01,\n","       -1.92396048e+00, -9.50796868e-01,  5.81629252e-01,  1.56261489e-01,\n","       -8.46518119e-01, -1.25641367e+00, -8.80788294e-01,  1.18770159e+00,\n","       -1.83027553e+00,  1.07985160e+00,  1.46632528e-01, -2.45201460e+00,\n","        1.83983457e+00,  3.20329214e-01,  1.12232377e+00,  8.03504139e-01,\n","        8.86166741e-01, -5.42266311e-01, -3.73224318e-01,  6.36910734e-03,\n","       -1.35639443e+00,  2.59349197e-01,  9.27048809e-01,  1.43551382e+00,\n","       -4.58824197e-01, -4.91410411e-01,  7.86625362e-01,  7.95040744e-01,\n","       -8.93049095e-01,  9.50686680e-03,  5.87449372e-01, -1.92124937e-01,\n","       -2.73771739e-01, -6.28795366e-01,  1.55996200e-01,  3.47271985e-01,\n","       -3.28076042e-01, -1.43320222e+00, -4.31772428e-01,  1.38159981e+00,\n","       -1.12452832e-01,  8.03276937e-01, -1.33916386e+00,  1.08966529e+00,\n","        9.43030121e-01,  4.82937311e-02,  8.06851234e-02,  2.30426329e-03,\n","       -2.03988791e-01, -1.11041991e+00,  8.42837620e-02,  1.52216207e+00,\n","        1.29525193e-01,  7.68184915e-01,  1.44527274e+00, -6.31523374e-01,\n","       -1.20385307e+00,  7.26609723e-01, -2.23222016e+00, -1.61567232e+00,\n","       -1.49747085e-01,  3.28775284e+00, -5.62634744e-01, -4.88425750e-01,\n","       -9.05412114e-01, -8.17150641e-01, -6.17545606e-01,  7.96291578e-02,\n","        7.60498905e-01,  1.34651089e-01, -1.68115086e+00,  4.42424388e-01,\n","       -6.17146977e-01,  3.57294019e-01, -8.39763831e-01, -1.70008897e+00,\n","        1.66692915e-01, -2.82708734e-01,  1.17033497e+00, -1.34007066e+00,\n","       -5.70689576e-01, -5.14482369e-01, -2.45751431e+00,  2.31975857e-01,\n","        9.91530268e-01, -1.18997958e+00, -8.49434336e-01,  8.43178525e-01,\n","        9.60211937e-01, -7.01428383e-01,  1.63911683e+00, -2.76218622e+00,\n","        4.97609119e-01,  1.25955771e+00, -1.07871166e-01, -4.65769182e-01,\n","       -6.46206414e-01, -3.34019186e-01, -1.91110229e+00,  1.15361028e+00,\n","       -7.76468213e-01,  8.85090612e-02, -7.01863864e-01,  6.42782248e-01,\n","       -2.30202531e-01, -2.23120333e+00,  5.55862918e-01,  1.97368348e+00,\n","       -1.16385198e+00, -1.00259355e+00, -1.99868781e+00, -1.43618191e+00,\n","        1.04370649e+00,  8.19442390e-01,  2.84030655e-01,  1.28674261e+00])"]},"metadata":{},"execution_count":41}]},{"cell_type":"markdown","metadata":{"id":"MiHVT1dUfmNV"},"source":["Имеются встроенные функции"]},{"cell_type":"code","metadata":{"id":"O9YkL8oPfmNV","outputId":"12bc2d11-84c1-44bc-e059-66e6b1188157"},"source":["print(np.sqrt(b))\n","print(np.exp(b))\n","print(np.log(b + 1))\n","print(np.sin(b))\n","print(np.e, np.pi)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[0.         1.97545919 2.76026224 3.34107628 3.81385036]\n","[1.00000000e+00 4.95230899e+01 2.03662157e+03 7.04593127e+04\n"," 2.07496438e+06]\n","[0.         1.58973284 2.15397459 2.49838135 2.74376828]\n","[ 0.         -0.68953468  0.9725297  -0.98605188  0.91780205]\n","2.718281828459045 3.141592653589793\n"]}]},{"cell_type":"markdown","metadata":{"id":"bzIBuoHZfmNW"},"source":["Иногда бывает нужно использовать частичные (кумулятивные) суммы. В нашем курсе такое пригодится."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o7iiy0VVI-B8","executionInfo":{"status":"ok","timestamp":1632324807280,"user_tz":-180,"elapsed":402,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"a811477a-7a9a-4e69-bd4b-404d9b89050d"},"source":["b"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([18, 14, 16, 18])"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lPTe5BJ3fmNW","executionInfo":{"status":"ok","timestamp":1632324807597,"user_tz":-180,"elapsed":4,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"ac3bf891-e9d0-48a6-fa79-568ca4426ce3"},"source":["print(b.cumsum()[::-1])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[66 48 32 18]\n"]}]},{"cell_type":"markdown","metadata":{"id":"hjedKncOfmNY"},"source":["Функция `sort` возвращает отсортированную копию, метод `sort` сортирует на месте."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I6oLUas2fmNY","executionInfo":{"status":"ok","timestamp":1632324840056,"user_tz":-180,"elapsed":343,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"0a41d9c1-3b26-4024-85e1-74c889d4fe46"},"source":["print(np.sort(b))\n","print(b)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[14 16 18 18]\n","[18 14 16 18]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ipq5cBfdfmNZ","executionInfo":{"status":"ok","timestamp":1632324847521,"user_tz":-180,"elapsed":327,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"c4a24b94-9f4a-4cc3-990a-14230bda0303"},"source":["b.sort()\n","print(b)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[14 16 18 18]\n"]}]},{"cell_type":"markdown","metadata":{"id":"D8PDlwE-fmNc"},"source":["Объединение массивов \"по-горизонтали\" (horizontal stack)."]},{"cell_type":"code","metadata":{"id":"9QNmb95wfmNc","outputId":"2c23f7c8-4d66-4d0f-ae9d-38b013352439"},"source":["a = np.array([1, 2, 3])\n","b = np.array([100, 200, 300])\n","\n","print(np.hstack((a, b)))"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[  1   2   3 100 200 300]\n"]}]},{"cell_type":"markdown","metadata":{"id":"0xcN7Aj_fmNe"},"source":["Объединение массивов \"по-вертикали\" (vertical stack)."]},{"cell_type":"code","metadata":{"id":"Y_jxaXArfmNe","outputId":"32c58870-a98f-493a-c002-1e91934f2767"},"source":["print(np.vstack((a, b)))"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[  1   2   3]\n"," [100 200 300]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"Ff0G4h_QfmNf"},"source":["Расщепление массива в позициях 3 и 6."]},{"cell_type":"code","metadata":{"id":"IUJsUaPdfmNf","outputId":"526cbd9e-9303-4f68-d8cf-964f34afe641"},"source":["a = np.random.random(10)\n","np.hsplit(a, [3, 6])"],"execution_count":null,"outputs":[{"data":{"text/plain":["[array([0.64501372, 0.99102171, 0.28545633]),\n"," array([0.6489831 , 0.95678594, 0.80428645]),\n"," array([0.59815893, 0.81674245, 0.44190248, 0.47429843])]"]},"execution_count":54,"metadata":{"tags":[]},"output_type":"execute_result"}]},{"cell_type":"markdown","metadata":{"id":"BaRHNopmfmNg"},"source":["Функции `delete`, `insert` и `append` не меняют массив на месте, а возвращают новый массив, в котором удалены, вставлены в середину или добавлены в конец какие-то элементы."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nKd8vvWwfmNg","executionInfo":{"status":"ok","timestamp":1632325006271,"user_tz":-180,"elapsed":293,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"d3efcda6-ff19-4164-cda3-8508ed66cfec"},"source":["a = np.arange(0.1, 0.9, 0.001)\n","a"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.1  , 0.101, 0.102, 0.103, 0.104, 0.105, 0.106, 0.107, 0.108,\n","       0.109, 0.11 , 0.111, 0.112, 0.113, 0.114, 0.115, 0.116, 0.117,\n","       0.118, 0.119, 0.12 , 0.121, 0.122, 0.123, 0.124, 0.125, 0.126,\n","       0.127, 0.128, 0.129, 0.13 , 0.131, 0.132, 0.133, 0.134, 0.135,\n","       0.136, 0.137, 0.138, 0.139, 0.14 , 0.141, 0.142, 0.143, 0.144,\n","       0.145, 0.146, 0.147, 0.148, 0.149, 0.15 , 0.151, 0.152, 0.153,\n","       0.154, 0.155, 0.156, 0.157, 0.158, 0.159, 0.16 , 0.161, 0.162,\n","       0.163, 0.164, 0.165, 0.166, 0.167, 0.168, 0.169, 0.17 , 0.171,\n","       0.172, 0.173, 0.174, 0.175, 0.176, 0.177, 0.178, 0.179, 0.18 ,\n","       0.181, 0.182, 0.183, 0.184, 0.185, 0.186, 0.187, 0.188, 0.189,\n","       0.19 , 0.191, 0.192, 0.193, 0.194, 0.195, 0.196, 0.197, 0.198,\n","       0.199, 0.2  , 0.201, 0.202, 0.203, 0.204, 0.205, 0.206, 0.207,\n","       0.208, 0.209, 0.21 , 0.211, 0.212, 0.213, 0.214, 0.215, 0.216,\n","       0.217, 0.218, 0.219, 0.22 , 0.221, 0.222, 0.223, 0.224, 0.225,\n","       0.226, 0.227, 0.228, 0.229, 0.23 , 0.231, 0.232, 0.233, 0.234,\n","       0.235, 0.236, 0.237, 0.238, 0.239, 0.24 , 0.241, 0.242, 0.243,\n","       0.244, 0.245, 0.246, 0.247, 0.248, 0.249, 0.25 , 0.251, 0.252,\n","       0.253, 0.254, 0.255, 0.256, 0.257, 0.258, 0.259, 0.26 , 0.261,\n","       0.262, 0.263, 0.264, 0.265, 0.266, 0.267, 0.268, 0.269, 0.27 ,\n","       0.271, 0.272, 0.273, 0.274, 0.275, 0.276, 0.277, 0.278, 0.279,\n","       0.28 , 0.281, 0.282, 0.283, 0.284, 0.285, 0.286, 0.287, 0.288,\n","       0.289, 0.29 , 0.291, 0.292, 0.293, 0.294, 0.295, 0.296, 0.297,\n","       0.298, 0.299, 0.3  , 0.301, 0.302, 0.303, 0.304, 0.305, 0.306,\n","       0.307, 0.308, 0.309, 0.31 , 0.311, 0.312, 0.313, 0.314, 0.315,\n","       0.316, 0.317, 0.318, 0.319, 0.32 , 0.321, 0.322, 0.323, 0.324,\n","       0.325, 0.326, 0.327, 0.328, 0.329, 0.33 , 0.331, 0.332, 0.333,\n","       0.334, 0.335, 0.336, 0.337, 0.338, 0.339, 0.34 , 0.341, 0.342,\n","       0.343, 0.344, 0.345, 0.346, 0.347, 0.348, 0.349, 0.35 , 0.351,\n","       0.352, 0.353, 0.354, 0.355, 0.356, 0.357, 0.358, 0.359, 0.36 ,\n","       0.361, 0.362, 0.363, 0.364, 0.365, 0.366, 0.367, 0.368, 0.369,\n","       0.37 , 0.371, 0.372, 0.373, 0.374, 0.375, 0.376, 0.377, 0.378,\n","       0.379, 0.38 , 0.381, 0.382, 0.383, 0.384, 0.385, 0.386, 0.387,\n","       0.388, 0.389, 0.39 , 0.391, 0.392, 0.393, 0.394, 0.395, 0.396,\n","       0.397, 0.398, 0.399, 0.4  , 0.401, 0.402, 0.403, 0.404, 0.405,\n","       0.406, 0.407, 0.408, 0.409, 0.41 , 0.411, 0.412, 0.413, 0.414,\n","       0.415, 0.416, 0.417, 0.418, 0.419, 0.42 , 0.421, 0.422, 0.423,\n","       0.424, 0.425, 0.426, 0.427, 0.428, 0.429, 0.43 , 0.431, 0.432,\n","       0.433, 0.434, 0.435, 0.436, 0.437, 0.438, 0.439, 0.44 , 0.441,\n","       0.442, 0.443, 0.444, 0.445, 0.446, 0.447, 0.448, 0.449, 0.45 ,\n","       0.451, 0.452, 0.453, 0.454, 0.455, 0.456, 0.457, 0.458, 0.459,\n","       0.46 , 0.461, 0.462, 0.463, 0.464, 0.465, 0.466, 0.467, 0.468,\n","       0.469, 0.47 , 0.471, 0.472, 0.473, 0.474, 0.475, 0.476, 0.477,\n","       0.478, 0.479, 0.48 , 0.481, 0.482, 0.483, 0.484, 0.485, 0.486,\n","       0.487, 0.488, 0.489, 0.49 , 0.491, 0.492, 0.493, 0.494, 0.495,\n","       0.496, 0.497, 0.498, 0.499, 0.5  , 0.501, 0.502, 0.503, 0.504,\n","       0.505, 0.506, 0.507, 0.508, 0.509, 0.51 , 0.511, 0.512, 0.513,\n","       0.514, 0.515, 0.516, 0.517, 0.518, 0.519, 0.52 , 0.521, 0.522,\n","       0.523, 0.524, 0.525, 0.526, 0.527, 0.528, 0.529, 0.53 , 0.531,\n","       0.532, 0.533, 0.534, 0.535, 0.536, 0.537, 0.538, 0.539, 0.54 ,\n","       0.541, 0.542, 0.543, 0.544, 0.545, 0.546, 0.547, 0.548, 0.549,\n","       0.55 , 0.551, 0.552, 0.553, 0.554, 0.555, 0.556, 0.557, 0.558,\n","       0.559, 0.56 , 0.561, 0.562, 0.563, 0.564, 0.565, 0.566, 0.567,\n","       0.568, 0.569, 0.57 , 0.571, 0.572, 0.573, 0.574, 0.575, 0.576,\n","       0.577, 0.578, 0.579, 0.58 , 0.581, 0.582, 0.583, 0.584, 0.585,\n","       0.586, 0.587, 0.588, 0.589, 0.59 , 0.591, 0.592, 0.593, 0.594,\n","       0.595, 0.596, 0.597, 0.598, 0.599, 0.6  , 0.601, 0.602, 0.603,\n","       0.604, 0.605, 0.606, 0.607, 0.608, 0.609, 0.61 , 0.611, 0.612,\n","       0.613, 0.614, 0.615, 0.616, 0.617, 0.618, 0.619, 0.62 , 0.621,\n","       0.622, 0.623, 0.624, 0.625, 0.626, 0.627, 0.628, 0.629, 0.63 ,\n","       0.631, 0.632, 0.633, 0.634, 0.635, 0.636, 0.637, 0.638, 0.639,\n","       0.64 , 0.641, 0.642, 0.643, 0.644, 0.645, 0.646, 0.647, 0.648,\n","       0.649, 0.65 , 0.651, 0.652, 0.653, 0.654, 0.655, 0.656, 0.657,\n","       0.658, 0.659, 0.66 , 0.661, 0.662, 0.663, 0.664, 0.665, 0.666,\n","       0.667, 0.668, 0.669, 0.67 , 0.671, 0.672, 0.673, 0.674, 0.675,\n","       0.676, 0.677, 0.678, 0.679, 0.68 , 0.681, 0.682, 0.683, 0.684,\n","       0.685, 0.686, 0.687, 0.688, 0.689, 0.69 , 0.691, 0.692, 0.693,\n","       0.694, 0.695, 0.696, 0.697, 0.698, 0.699, 0.7  , 0.701, 0.702,\n","       0.703, 0.704, 0.705, 0.706, 0.707, 0.708, 0.709, 0.71 , 0.711,\n","       0.712, 0.713, 0.714, 0.715, 0.716, 0.717, 0.718, 0.719, 0.72 ,\n","       0.721, 0.722, 0.723, 0.724, 0.725, 0.726, 0.727, 0.728, 0.729,\n","       0.73 , 0.731, 0.732, 0.733, 0.734, 0.735, 0.736, 0.737, 0.738,\n","       0.739, 0.74 , 0.741, 0.742, 0.743, 0.744, 0.745, 0.746, 0.747,\n","       0.748, 0.749, 0.75 , 0.751, 0.752, 0.753, 0.754, 0.755, 0.756,\n","       0.757, 0.758, 0.759, 0.76 , 0.761, 0.762, 0.763, 0.764, 0.765,\n","       0.766, 0.767, 0.768, 0.769, 0.77 , 0.771, 0.772, 0.773, 0.774,\n","       0.775, 0.776, 0.777, 0.778, 0.779, 0.78 , 0.781, 0.782, 0.783,\n","       0.784, 0.785, 0.786, 0.787, 0.788, 0.789, 0.79 , 0.791, 0.792,\n","       0.793, 0.794, 0.795, 0.796, 0.797, 0.798, 0.799, 0.8  , 0.801,\n","       0.802, 0.803, 0.804, 0.805, 0.806, 0.807, 0.808, 0.809, 0.81 ,\n","       0.811, 0.812, 0.813, 0.814, 0.815, 0.816, 0.817, 0.818, 0.819,\n","       0.82 , 0.821, 0.822, 0.823, 0.824, 0.825, 0.826, 0.827, 0.828,\n","       0.829, 0.83 , 0.831, 0.832, 0.833, 0.834, 0.835, 0.836, 0.837,\n","       0.838, 0.839, 0.84 , 0.841, 0.842, 0.843, 0.844, 0.845, 0.846,\n","       0.847, 0.848, 0.849, 0.85 , 0.851, 0.852, 0.853, 0.854, 0.855,\n","       0.856, 0.857, 0.858, 0.859, 0.86 , 0.861, 0.862, 0.863, 0.864,\n","       0.865, 0.866, 0.867, 0.868, 0.869, 0.87 , 0.871, 0.872, 0.873,\n","       0.874, 0.875, 0.876, 0.877, 0.878, 0.879, 0.88 , 0.881, 0.882,\n","       0.883, 0.884, 0.885, 0.886, 0.887, 0.888, 0.889, 0.89 , 0.891,\n","       0.892, 0.893, 0.894, 0.895, 0.896, 0.897, 0.898, 0.899])"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oXW9b7HmJpCg","executionInfo":{"status":"ok","timestamp":1632325022868,"user_tz":-180,"elapsed":360,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"d2fa8225-0c70-4a3b-e54a-498c8f4c89d2"},"source":["a"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.1  , 0.101, 0.102, 0.103, 0.104, 0.105, 0.106, 0.107, 0.108,\n","       0.109, 0.11 , 0.111, 0.112, 0.113, 0.114, 0.115, 0.116, 0.117,\n","       0.118, 0.119, 0.12 , 0.121, 0.122, 0.123, 0.124, 0.125, 0.126,\n","       0.127, 0.128, 0.129, 0.13 , 0.131, 0.132, 0.133, 0.134, 0.135,\n","       0.136, 0.137, 0.138, 0.139, 0.14 , 0.141, 0.142, 0.143, 0.144,\n","       0.145, 0.146, 0.147, 0.148, 0.149, 0.15 , 0.151, 0.152, 0.153,\n","       0.154, 0.155, 0.156, 0.157, 0.158, 0.159, 0.16 , 0.161, 0.162,\n","       0.163, 0.164, 0.165, 0.166, 0.167, 0.168, 0.169, 0.17 , 0.171,\n","       0.172, 0.173, 0.174, 0.175, 0.176, 0.177, 0.178, 0.179, 0.18 ,\n","       0.181, 0.182, 0.183, 0.184, 0.185, 0.186, 0.187, 0.188, 0.189,\n","       0.19 , 0.191, 0.192, 0.193, 0.194, 0.195, 0.196, 0.197, 0.198,\n","       0.199, 0.2  , 0.201, 0.202, 0.203, 0.204, 0.205, 0.206, 0.207,\n","       0.208, 0.209, 0.21 , 0.211, 0.212, 0.213, 0.214, 0.215, 0.216,\n","       0.217, 0.218, 0.219, 0.22 , 0.221, 0.222, 0.223, 0.224, 0.225,\n","       0.226, 0.227, 0.228, 0.229, 0.23 , 0.231, 0.232, 0.233, 0.234,\n","       0.235, 0.236, 0.237, 0.238, 0.239, 0.24 , 0.241, 0.242, 0.243,\n","       0.244, 0.245, 0.246, 0.247, 0.248, 0.249, 0.25 , 0.251, 0.252,\n","       0.253, 0.254, 0.255, 0.256, 0.257, 0.258, 0.259, 0.26 , 0.261,\n","       0.262, 0.263, 0.264, 0.265, 0.266, 0.267, 0.268, 0.269, 0.27 ,\n","       0.271, 0.272, 0.273, 0.274, 0.275, 0.276, 0.277, 0.278, 0.279,\n","       0.28 , 0.281, 0.282, 0.283, 0.284, 0.285, 0.286, 0.287, 0.288,\n","       0.289, 0.29 , 0.291, 0.292, 0.293, 0.294, 0.295, 0.296, 0.297,\n","       0.298, 0.299, 0.3  , 0.301, 0.302, 0.303, 0.304, 0.305, 0.306,\n","       0.307, 0.308, 0.309, 0.31 , 0.311, 0.312, 0.313, 0.314, 0.315,\n","       0.316, 0.317, 0.318, 0.319, 0.32 , 0.321, 0.322, 0.323, 0.324,\n","       0.325, 0.326, 0.327, 0.328, 0.329, 0.33 , 0.331, 0.332, 0.333,\n","       0.334, 0.335, 0.336, 0.337, 0.338, 0.339, 0.34 , 0.341, 0.342,\n","       0.343, 0.344, 0.345, 0.346, 0.347, 0.348, 0.349, 0.35 , 0.351,\n","       0.352, 0.353, 0.354, 0.355, 0.356, 0.357, 0.358, 0.359, 0.36 ,\n","       0.361, 0.362, 0.363, 0.364, 0.365, 0.366, 0.367, 0.368, 0.369,\n","       0.37 , 0.371, 0.372, 0.373, 0.374, 0.375, 0.376, 0.377, 0.378,\n","       0.379, 0.38 , 0.381, 0.382, 0.383, 0.384, 0.385, 0.386, 0.387,\n","       0.388, 0.389, 0.39 , 0.391, 0.392, 0.393, 0.394, 0.395, 0.396,\n","       0.397, 0.398, 0.399, 0.4  , 0.401, 0.402, 0.403, 0.404, 0.405,\n","       0.406, 0.407, 0.408, 0.409, 0.41 , 0.411, 0.412, 0.413, 0.414,\n","       0.415, 0.416, 0.417, 0.418, 0.419, 0.42 , 0.421, 0.422, 0.423,\n","       0.424, 0.425, 0.426, 0.427, 0.428, 0.429, 0.43 , 0.431, 0.432,\n","       0.433, 0.434, 0.435, 0.436, 0.437, 0.438, 0.439, 0.44 , 0.441,\n","       0.442, 0.443, 0.444, 0.445, 0.446, 0.447, 0.448, 0.449, 0.45 ,\n","       0.451, 0.452, 0.453, 0.454, 0.455, 0.456, 0.457, 0.458, 0.459,\n","       0.46 , 0.461, 0.462, 0.463, 0.464, 0.465, 0.466, 0.467, 0.468,\n","       0.469, 0.47 , 0.471, 0.472, 0.473, 0.474, 0.475, 0.476, 0.477,\n","       0.478, 0.479, 0.48 , 0.481, 0.482, 0.483, 0.484, 0.485, 0.486,\n","       0.487, 0.488, 0.489, 0.49 , 0.491, 0.492, 0.493, 0.494, 0.495,\n","       0.496, 0.497, 0.498, 0.499, 0.5  , 0.501, 0.502, 0.503, 0.504,\n","       0.505, 0.506, 0.507, 0.508, 0.509, 0.51 , 0.511, 0.512, 0.513,\n","       0.514, 0.515, 0.516, 0.517, 0.518, 0.519, 0.52 , 0.521, 0.522,\n","       0.523, 0.524, 0.525, 0.526, 0.527, 0.528, 0.529, 0.53 , 0.531,\n","       0.532, 0.533, 0.534, 0.535, 0.536, 0.537, 0.538, 0.539, 0.54 ,\n","       0.541, 0.542, 0.543, 0.544, 0.545, 0.546, 0.547, 0.548, 0.549,\n","       0.55 , 0.551, 0.552, 0.553, 0.554, 0.555, 0.556, 0.557, 0.558,\n","       0.559, 0.56 , 0.561, 0.562, 0.563, 0.564, 0.565, 0.566, 0.567,\n","       0.568, 0.569, 0.57 , 0.571, 0.572, 0.573, 0.574, 0.575, 0.576,\n","       0.577, 0.578, 0.579, 0.58 , 0.581, 0.582, 0.583, 0.584, 0.585,\n","       0.586, 0.587, 0.588, 0.589, 0.59 , 0.591, 0.592, 0.593, 0.594,\n","       0.595, 0.596, 0.597, 0.598, 0.599, 0.6  , 0.601, 0.602, 0.603,\n","       0.604, 0.605, 0.606, 0.607, 0.608, 0.609, 0.61 , 0.611, 0.612,\n","       0.613, 0.614, 0.615, 0.616, 0.617, 0.618, 0.619, 0.62 , 0.621,\n","       0.622, 0.623, 0.624, 0.625, 0.626, 0.627, 0.628, 0.629, 0.63 ,\n","       0.631, 0.632, 0.633, 0.634, 0.635, 0.636, 0.637, 0.638, 0.639,\n","       0.64 , 0.641, 0.642, 0.643, 0.644, 0.645, 0.646, 0.647, 0.648,\n","       0.649, 0.65 , 0.651, 0.652, 0.653, 0.654, 0.655, 0.656, 0.657,\n","       0.658, 0.659, 0.66 , 0.661, 0.662, 0.663, 0.664, 0.665, 0.666,\n","       0.667, 0.668, 0.669, 0.67 , 0.671, 0.672, 0.673, 0.674, 0.675,\n","       0.676, 0.677, 0.678, 0.679, 0.68 , 0.681, 0.682, 0.683, 0.684,\n","       0.685, 0.686, 0.687, 0.688, 0.689, 0.69 , 0.691, 0.692, 0.693,\n","       0.694, 0.695, 0.696, 0.697, 0.698, 0.699, 0.7  , 0.701, 0.702,\n","       0.703, 0.704, 0.705, 0.706, 0.707, 0.708, 0.709, 0.71 , 0.711,\n","       0.712, 0.713, 0.714, 0.715, 0.716, 0.717, 0.718, 0.719, 0.72 ,\n","       0.721, 0.722, 0.723, 0.724, 0.725, 0.726, 0.727, 0.728, 0.729,\n","       0.73 , 0.731, 0.732, 0.733, 0.734, 0.735, 0.736, 0.737, 0.738,\n","       0.739, 0.74 , 0.741, 0.742, 0.743, 0.744, 0.745, 0.746, 0.747,\n","       0.748, 0.749, 0.75 , 0.751, 0.752, 0.753, 0.754, 0.755, 0.756,\n","       0.757, 0.758, 0.759, 0.76 , 0.761, 0.762, 0.763, 0.764, 0.765,\n","       0.766, 0.767, 0.768, 0.769, 0.77 , 0.771, 0.772, 0.773, 0.774,\n","       0.775, 0.776, 0.777, 0.778, 0.779, 0.78 , 0.781, 0.782, 0.783,\n","       0.784, 0.785, 0.786, 0.787, 0.788, 0.789, 0.79 , 0.791, 0.792,\n","       0.793, 0.794, 0.795, 0.796, 0.797, 0.798, 0.799, 0.8  , 0.801,\n","       0.802, 0.803, 0.804, 0.805, 0.806, 0.807, 0.808, 0.809, 0.81 ,\n","       0.811, 0.812, 0.813, 0.814, 0.815, 0.816, 0.817, 0.818, 0.819,\n","       0.82 , 0.821, 0.822, 0.823, 0.824, 0.825, 0.826, 0.827, 0.828,\n","       0.829, 0.83 , 0.831, 0.832, 0.833, 0.834, 0.835, 0.836, 0.837,\n","       0.838, 0.839, 0.84 , 0.841, 0.842, 0.843, 0.844, 0.845, 0.846,\n","       0.847, 0.848, 0.849, 0.85 , 0.851, 0.852, 0.853, 0.854, 0.855,\n","       0.856, 0.857, 0.858, 0.859, 0.86 , 0.861, 0.862, 0.863, 0.864,\n","       0.865, 0.866, 0.867, 0.868, 0.869, 0.87 , 0.871, 0.872, 0.873,\n","       0.874, 0.875, 0.876, 0.877, 0.878, 0.879, 0.88 , 0.881, 0.882,\n","       0.883, 0.884, 0.885, 0.886, 0.887, 0.888, 0.889, 0.89 , 0.891,\n","       0.892, 0.893, 0.894, 0.895, 0.896, 0.897, 0.898, 0.899])"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","metadata":{"id":"G3n3pvY8fmNh","outputId":"3b80612e-e184-41ea-d0a4-66bca100d512"},"source":["a = np.delete(a, [5, 7])\n","print(a)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[0 1 2 3 4 6 8 9]\n"]}]},{"cell_type":"code","metadata":{"id":"vSh1n-MrfmNi","outputId":"33615dda-c012-40db-b228-c8dd58311f46"},"source":["a = np.insert(a, 2, [0, 0])\n","print(a)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[0 1 0 0 2 3 4 6 8 9]\n"]}]},{"cell_type":"code","metadata":{"id":"nK_tcSNCfmNi","outputId":"7f96fd06-19ef-4e7c-e860-efec09e5a0b5"},"source":["a = np.append(a, [1, 2, 3])\n","print(a)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[0 1 0 0 2 3 4 6 8 9 1 2 3]\n"]}]},{"cell_type":"markdown","metadata":{"id":"gUvXXkjufmNk"},"source":["Есть несколько способов индексации массива. Вот обычный индекс."]},{"cell_type":"code","metadata":{"id":"VaxI1LMZfmNk","outputId":"17672fb9-784a-4bb4-f336-e6b33d7bdf62"},"source":["a = np.linspace(0, 1, 11)\n","print(a)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[0.  0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]\n"]}]},{"cell_type":"code","metadata":{"id":"Un8iBzpGfmNm","outputId":"f2095f87-59b8-4af5-d293-4bcb69c84f84"},"source":["b = a[2]\n","print(b)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["0.2\n"]}]},{"cell_type":"markdown","metadata":{"id":"tUEpza04fmNn"},"source":["Диапазон индексов. Создаётся новый заголовок массива, указывающий на те же данные. Изменения, сделанные через такой массив, видны и в исходном массиве."]},{"cell_type":"code","metadata":{"id":"_1r9_G69fmNn","outputId":"857d8668-17b6-4ee8-dc51-78e928b2558e"},"source":["b = a[2:6]\n","print(b)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[0.2 0.3 0.4 0.5]\n"]}]},{"cell_type":"code","metadata":{"id":"C4t-B6ZzfmNo","outputId":"e61b7161-d3e2-42be-f8be-3814f9d13556"},"source":["b[0] = -0.2\n","print(b)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[-0.2  0.3  0.4  0.5]\n"]}]},{"cell_type":"code","metadata":{"id":"2qbvKB_jfmNp","outputId":"1ab424cc-8bbe-420c-e4d3-121fdbff74ad"},"source":["print(a)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[ 0.   0.1 -0.2  0.3  0.4  0.5  0.6  0.7  0.8  0.9  1. ]\n"]}]},{"cell_type":"markdown","metadata":{"id":"TeiXcTTTfmNq"},"source":["Диапазон с шагом 2."]},{"cell_type":"code","metadata":{"id":"AJjKLi35fmNq","outputId":"76837c5f-0e53-4400-c201-205c0dbb3b31"},"source":["b = a[1:10:2]\n","print(b)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[0.1 0.3 0.5 0.7 0.9]\n"]}]},{"cell_type":"code","metadata":{"id":"jK_Td23_fmNr","outputId":"9122e4c9-3bc2-4214-e4e9-85147880b863"},"source":["b[0] = -0.1\n","print(a)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[ 0.  -0.1 -0.2  0.3  0.4  0.5  0.6  0.7  0.8  0.9  1. ]\n"]}]},{"cell_type":"markdown","metadata":{"id":"fZpNnjbqfmNs"},"source":["Массив в обратном порядке."]},{"cell_type":"code","metadata":{"id":"jATTNvVYfmNs","outputId":"4dc736a8-697c-4e28-88f3-f62948306640"},"source":["b = a[len(a):0:-1]\n","print(b)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[ 1.   0.9  0.8  0.7  0.6  0.5  0.4  0.3 -0.2 -0.1]\n"]}]},{"cell_type":"markdown","metadata":{"id":"JyLgSAwHfmNt"},"source":["Подмассиву можно присвоить значение - массив правильного размера или скаляр."]},{"cell_type":"code","metadata":{"id":"7gxJfWqifmNt","outputId":"40ec931a-6bef-42f7-ffa0-62d140d19e85"},"source":["a[1:10:3] = 0\n","print(a)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[ 0.   0.  -0.2  0.3  0.   0.5  0.6  0.   0.8  0.9  1. ]\n"]}]},{"cell_type":"markdown","metadata":{"id":"CDT5mLThfmNt"},"source":["Тут опять создаётся только новый заголовок, указывающий на те же данные."]},{"cell_type":"code","metadata":{"id":"f_tZbUirfmNu","outputId":"174fe1c6-7b6a-4c09-88e8-b97d5f31d599"},"source":["b = a[:]\n","b[1] = 0.1\n","print(a)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[ 0.   0.1 -0.2  0.3  0.   0.5  0.6  0.   0.8  0.9  1. ]\n"]}]},{"cell_type":"markdown","metadata":{"id":"CzZSgXktfmNu"},"source":["Чтобы скопировать и данные массива, нужно использовать метод `copy`."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PtNw7vRVKXvf","executionInfo":{"status":"ok","timestamp":1632325203867,"user_tz":-180,"elapsed":320,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"cd7493c9-8e09-41ee-c712-2ecc00ddb02f"},"source":["a = np.array([1, 2, 3])\n","b = a\n","b"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 3])"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","metadata":{"id":"PEA_nyPRKfzX"},"source":["b[0] = -1"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mqfCctaNKf9P","executionInfo":{"status":"ok","timestamp":1632325229070,"user_tz":-180,"elapsed":283,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"dd51e3fd-3e3f-45ad-fef9-9ddc225d5890"},"source":["a"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-1,  2,  3])"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bo8Cgn_dfmNv","executionInfo":{"status":"ok","timestamp":1632325268439,"user_tz":-180,"elapsed":375,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"97922c9b-7a07-4de1-f844-3b4ef7793130"},"source":["b = a.copy()\n","b[2] = 0\n","print(b)\n","print(a)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[-1  2  0]\n","[-1  2  3]\n"]}]},{"cell_type":"markdown","metadata":{"id":"vdDCbeHBfmNv"},"source":["Можно задать список индексов."]},{"cell_type":"code","metadata":{"id":"DYgQYl9TfmNv","outputId":"49beab92-b839-47b9-b17c-c213733be9aa"},"source":["print(a[[2, 3, 5]])"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[-0.2  0.3  0.5]\n"]}]},{"cell_type":"markdown","metadata":{"id":"aFWiNZd7fmNw"},"source":["Можно задать булев массив той же величины."]},{"cell_type":"code","metadata":{"id":"W4tlGJzXfmNw","outputId":"5779ad8c-d779-46be-8edb-4e372452ef04"},"source":["b = a > 0\n","print(b)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[False  True False  True False  True  True False  True  True  True]\n"]}]},{"cell_type":"code","metadata":{"id":"5B6-HVhgfmNx","outputId":"3b3a6c0c-fbf2-454c-b652-171257797c96"},"source":["print(a[b])"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[0.1 0.3 0.5 0.6 0.8 0.9 1. ]\n"]}]},{"cell_type":"markdown","metadata":{"collapsed":true,"id":"mrm41pzufmNy"},"source":["## 2-мерные массивы"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nUDue8svfmNy","executionInfo":{"status":"ok","timestamp":1632325370445,"user_tz":-180,"elapsed":417,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"5ac14d3d-cc10-47a0-c5cc-7eea03a90fcb"},"source":["a = np.array([[0.0, 1.0], [-1.0, 0.0]])\n","print(a)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 0.  1.]\n"," [-1.  0.]]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"edMAUCADfmNz","executionInfo":{"status":"ok","timestamp":1632325370839,"user_tz":-180,"elapsed":8,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"fadc88f9-6f85-4b5e-e66d-ae0b6fa00939"},"source":["a.ndim"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-ehx8jg5fmN0","executionInfo":{"status":"ok","timestamp":1632325371590,"user_tz":-180,"elapsed":7,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"0be5b695-c691-43ab-b7bd-161860a9f89b"},"source":["a.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2, 2)"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q-xHGc8cfmN0","executionInfo":{"status":"ok","timestamp":1632325371976,"user_tz":-180,"elapsed":9,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"76ff1745-ee63-437e-8f27-35dd206e2add"},"source":["len(a), a.size"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2, 4)"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5GruXNexfmN1","executionInfo":{"status":"ok","timestamp":1632325372926,"user_tz":-180,"elapsed":11,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"a6482f4b-8485-4097-e230-e50eee221007"},"source":["a[1, 0]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-1.0"]},"metadata":{},"execution_count":56}]},{"cell_type":"markdown","metadata":{"id":"hs-7wB5dfmN2"},"source":["Атрибуту `shape` можно присвоить новое значение - кортеж размеров по всем координатам. Получится новый заголовок массива; его данные не изменятся."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4z49_SEyfmN2","executionInfo":{"status":"ok","timestamp":1632325375660,"user_tz":-180,"elapsed":15,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"c4db36e2-bfd4-44c4-bb88-055f69d363e6"},"source":["b = np.linspace(0, 3, 4)\n","print(b)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0. 1. 2. 3.]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5JKJ90zJfmN3","executionInfo":{"status":"ok","timestamp":1632325377443,"user_tz":-180,"elapsed":337,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"d1421083-c736-4e5b-cb9b-6b5baf9be313"},"source":["b.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4,)"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rV_Tyzp0fmN4","executionInfo":{"status":"ok","timestamp":1632325415520,"user_tz":-180,"elapsed":317,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"4f0d8b59-5c5e-4b6e-dfc4-deff75b53e21"},"source":["b.shape = 2, 2\n","print(b)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0. 1.]\n"," [2. 3.]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"c6fPpTnYfmN5"},"source":["Можно растянуть в одномерный массив"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V35k5mhQfmN5","executionInfo":{"status":"ok","timestamp":1632325430770,"user_tz":-180,"elapsed":301,"user":{"displayName":"Леонид Цыпленков","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhBV9Kk0XQNW_3_NtoMOwDgX7x4ahu5oxYuOIvO0Q=s64","userId":"02610271275302536313"}},"outputId":"40e75075-8435-44c1-aa68-46312036cd26"},"source":["print(b.ravel())"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0. 1. 2. 3.]\n"]}]},{"cell_type":"markdown","metadata":{"id":"79n-zW4RfmN6"},"source":["Арифметические операции поэлементные"]},{"cell_type":"code","metadata":{"id":"eDoK5LNLfmN6","outputId":"830420d0-b0f5-48a0-8404-e7ad4160c9b7"},"source":["a"],"execution_count":null,"outputs":[{"data":{"text/plain":["array([[ 0.,  1.],\n","       [-1.,  0.]])"]},"execution_count":60,"metadata":{"tags":[]},"output_type":"execute_result"}]},{"cell_type":"code","metadata":{"id":"UBAKba1VfmN7","outputId":"0d20c6cc-f4e0-4883-b6aa-3a03b367b85c"},"source":["b = np.array([[3, 4], \n","    [8, 6 ]])\n","print(b)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[3 4]\n"," [8 6]]\n"]}]},{"cell_type":"code","metadata":{"id":"Tgm5RIaWfmN8","outputId":"a34908b8-c124-4dfc-9724-cf2fbb7e07e4"},"source":["print(a + 1)\n","print(a * 2)\n","print(a + [0, 1])  # второе слагаемое дополняется до матрицы копированием строк\n","print(a + np.array([[0, 2]]).T)  # .T - транспонирование\n","print(a + b)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[1. 2.]\n"," [0. 1.]]\n","[[ 0.  2.]\n"," [-2.  0.]]\n","[[ 0.  2.]\n"," [-1.  1.]]\n","[[0. 1.]\n"," [1. 2.]]\n","[[3. 5.]\n"," [7. 6.]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"UsHKpNqyfmN9"},"source":["Поэлементное и матричное (только в Python 3.5) умножение."]},{"cell_type":"code","metadata":{"id":"y2AzM-6wfmN-","outputId":"93de801e-1bd4-44ae-e449-bb2abc3dc3bc"},"source":["print(a)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[ 0.  1.]\n"," [-1.  0.]]\n"]}]},{"cell_type":"code","metadata":{"id":"B8XRyWUdfmN_","outputId":"dd8636ac-38b4-48d6-e959-412464f2c9cd"},"source":["print(b)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[3 4]\n"," [8 6]]\n"]}]},{"cell_type":"code","metadata":{"id":"WjVtzrN-fmOA","outputId":"06e7d89a-db82-4ea9-a832-a99b221915f8"},"source":["print(a * b)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[ 0.  4.]\n"," [-8.  0.]]\n"]}]},{"cell_type":"code","metadata":{"id":"NQvK75yDfmOA","outputId":"083f2938-434d-46e2-a7e7-d0a1b92be0a2"},"source":["print(a @ b)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[ 8.  6.]\n"," [-3. -4.]]\n"]}]},{"cell_type":"code","metadata":{"id":"QmJCt0ApfmOB","outputId":"b4050307-b67c-4212-f015-97e8892626df"},"source":["print(b @ a)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[-4.  3.]\n"," [-6.  8.]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"7uC-wg07fmOC"},"source":["Умножение матрицы на вектор."]},{"cell_type":"code","metadata":{"id":"-gsGIk3hfmOC","outputId":"56467a5b-c21e-43fd-a7c0-4411c7b3610f"},"source":["v = np.array([1, -1], dtype=np.float64)\n","print(b @ v)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[-1.  2.]\n"]}]},{"cell_type":"code","metadata":{"id":"gAnLlc_TfmOD","outputId":"178c17a6-0427-47b9-cabc-ff496d6e6e3a"},"source":["print(v @ b)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[-5. -2.]\n"]}]},{"cell_type":"markdown","metadata":{"id":"wigtCX3lfmOF"},"source":["Если у вас Питон более ранней версии, то для работы с матрицами можно использовать класс `np.matrix`, в котором операция умножения реализуется как матричное умножение."]},{"cell_type":"code","metadata":{"id":"Bd4wMoWkfmOF","outputId":"83e13d81-d6c5-4895-9e2e-b6b0a8f51001"},"source":["np.matrix(a) * np.matrix(b)"],"execution_count":null,"outputs":[{"data":{"text/plain":["matrix([[ 2.,  3.],\n","        [ 0., -1.]])"]},"execution_count":88,"metadata":{"tags":[]},"output_type":"execute_result"}]},{"cell_type":"markdown","metadata":{"id":"YqgeGsYrfmOG"},"source":["Внешнее произведение $a_{ij}=u_i v_j$"]},{"cell_type":"code","metadata":{"id":"gwKinevJfmOG","outputId":"64ae06ce-9883-4ce5-be84-2f03d3e61cdf"},"source":["u = np.linspace(1, 2, 2)\n","v = np.linspace(2, 4, 3)\n","print(u)\n","print(v)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[1. 2.]\n","[2. 3. 4.]\n"]}]},{"cell_type":"code","metadata":{"id":"o9P_82UzfmOH","outputId":"45677d9b-1a0f-4a1e-8bbb-e2fa5881a3cf"},"source":["a = np.outer(u, v)\n","print(a)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[2. 3. 4.]\n"," [4. 6. 8.]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"Wrb7V9m4fmOI"},"source":["Двумерные массивы, зависящие только от одного индекса: $x_{ij}=u_j$, $y_{ij}=v_i$"]},{"cell_type":"code","metadata":{"id":"WHcnUD8GfmOI","outputId":"58782d4c-6941-4594-e03d-6a70a6126c26"},"source":["x, y = np.meshgrid(u, v)\n","print(x)\n","print(y)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[1. 2.]\n"," [1. 2.]\n"," [1. 2.]]\n","[[2. 2.]\n"," [3. 3.]\n"," [4. 4.]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"xnJuN0N6fmOJ"},"source":["Единичная матрица."]},{"cell_type":"code","metadata":{"id":"6R7djX9kfmOJ","outputId":"ab4fc66d-c132-4552-8bc0-9fc70bd624b2"},"source":["I = np.eye(4)\n","print(I)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[1. 0. 0. 0.]\n"," [0. 1. 0. 0.]\n"," [0. 0. 1. 0.]\n"," [0. 0. 0. 1.]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"u5c-qCxSfmOL"},"source":["Метод `reshape` делает то же самое, что присваивание атрибуту `shape`."]},{"cell_type":"code","metadata":{"id":"4d3ToIOAfmOL","outputId":"4b6f9798-6e9a-44a0-d597-d5886aea874e"},"source":["print(I.reshape(16))"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1.]\n"]}]},{"cell_type":"code","metadata":{"id":"pPNkSiwTfmOM","outputId":"050b53d0-92a6-40dc-c6a2-2005b6a983fe"},"source":["print(I.reshape(8, 2))"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[1. 0.]\n"," [0. 0.]\n"," [0. 1.]\n"," [0. 0.]\n"," [0. 0.]\n"," [1. 0.]\n"," [0. 0.]\n"," [0. 1.]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"k3605lJYfmON"},"source":["Строка."]},{"cell_type":"code","metadata":{"id":"vBkj1jD5fmOO","outputId":"5d9cb9d1-bfb8-4fd1-f7f1-c4a3c8497fe8"},"source":["print(I[2])"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[0. 0. 1. 0.]\n"]}]},{"cell_type":"markdown","metadata":{"id":"zx6SXOoHfmOP"},"source":["Цикл по строкам."]},{"cell_type":"code","metadata":{"id":"I6jGWR64fmOP","scrolled":true,"outputId":"1f312481-ba7c-46c5-80c7-b6ad57ab4cce"},"source":["for row in I:\n","    print(row)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[1. 0. 0. 0.]\n","[0. 1. 0. 0.]\n","[0. 0. 1. 0.]\n","[0. 0. 0. 1.]\n"]}]},{"cell_type":"markdown","metadata":{"id":"tWrIzkQsfmOQ"},"source":["Столбец."]},{"cell_type":"code","metadata":{"id":"9Z9mor1XfmOR","outputId":"bf1fcec0-0ed0-40a3-e7c7-21143a89f3de"},"source":["print(I[1, 1])"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["1.0\n"]}]},{"cell_type":"markdown","metadata":{"id":"FvEaf0c7fmOS"},"source":["Подматрица."]},{"cell_type":"code","metadata":{"id":"CaXHoIZgfmOS","outputId":"17c1d0f8-57af-419a-a5d0-940ca548ab66"},"source":["print(I[0:2, 1:3])"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[0. 0.]\n"," [1. 0.]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"ZdAv5jXLfmOT"},"source":["Можно построить двумерный массив из функции."]},{"cell_type":"code","metadata":{"id":"FPQdAfykfmOU","outputId":"a9ae737b-f9dc-4d60-e81e-ee36fb89eef9"},"source":["def f(i, j):\n","    print(i)\n","    print(j)\n","    return 10 * i + j\n","\n","print(np.fromfunction(f, (4, 4), dtype=np.int64))"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[0 0 0 0]\n"," [1 1 1 1]\n"," [2 2 2 2]\n"," [3 3 3 3]]\n","[[0 1 2 3]\n"," [0 1 2 3]\n"," [0 1 2 3]\n"," [0 1 2 3]]\n","[[ 0  1  2  3]\n"," [10 11 12 13]\n"," [20 21 22 23]\n"," [30 31 32 33]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"kIHvkeIzfmOV"},"source":["Транспонированная матрица."]},{"cell_type":"code","metadata":{"id":"XkCvBDRMfmOV","outputId":"9824a322-60e4-4f08-a4e2-48f9847873c3"},"source":["print(b.T)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[0. 2.]\n"," [1. 3.]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"YxT5DwPffmOW"},"source":["Соединение матриц по горизонтали и по вертикали."]},{"cell_type":"code","metadata":{"id":"SgUOSUpJfmOW","outputId":"c733ed36-5bf7-4cba-b4b2-16027fcaf92b"},"source":["a = np.array([[0, 1], [2, 3]])\n","b = np.array([[4, 5, 6], [7, 8, 9]])\n","c = np.array([[4, 5], [6, 7], [8, 9]])\n","print(a)\n","print(b)\n","print(c)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[0 1]\n"," [2 3]]\n","[[4 5 6]\n"," [7 8 9]]\n","[[4 5]\n"," [6 7]\n"," [8 9]]\n"]}]},{"cell_type":"code","metadata":{"id":"Q9XfHNcdfmOX","outputId":"7b91c73a-41de-4a2f-d98b-ea557ae14d29"},"source":["print(np.hstack((a, b)))"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[0 1 4 5 6]\n"," [2 3 7 8 9]]\n"]}]},{"cell_type":"code","metadata":{"id":"9KBGlrxzfmOY","outputId":"7b18e674-23e8-4cdb-d32e-53b99653549e"},"source":["print(np.vstack((a, c)))"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[0 1]\n"," [2 3]\n"," [4 5]\n"," [6 7]\n"," [8 9]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"B75txmwJfmOZ"},"source":["Сумма всех элементов; суммы столбцов; суммы строк."]},{"cell_type":"code","metadata":{"id":"Oo00j_hMfmOZ","outputId":"0e2391c2-6ff0-4ba8-ce90-4318c8f89cff"},"source":["b"],"execution_count":null,"outputs":[{"data":{"text/plain":["array([[3, 4],\n","       [8, 6]])"]},"execution_count":87,"metadata":{"tags":[]},"output_type":"execute_result"}]},{"cell_type":"code","metadata":{"id":"6qzmyVMKfmOZ","outputId":"ba197e8b-2ed7-4e9d-8d34-7fd4134262a2"},"source":["print(b.sum())\n","print(b.sum(axis=0))\n","print(b.sum(axis=1))"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["21\n","[11 10]\n","[ 7 14]\n"]}]},{"cell_type":"markdown","metadata":{"id":"nmj7UTCmfmOa"},"source":["Аналогично работают `prod`, `max`, `min` и т.д."]},{"cell_type":"code","metadata":{"id":"CbJsqMKcfmOb","outputId":"3cf6b856-4086-4466-93a0-33ed8801fc98"},"source":["print(b.max())\n","print(b.max(axis=0))\n","print(b.min(axis=1))"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["9\n","[7 8 9]\n","[4 7]\n"]}]},{"cell_type":"markdown","metadata":{"id":"5eeossTYfmOc"},"source":["След - сумма диагональных элементов."]},{"cell_type":"code","metadata":{"id":"7mMEE_BzfmOc","outputId":"2288d8ea-1412-40b9-95ca-b2bf3be1cd44"},"source":["np.trace(a)"],"execution_count":null,"outputs":[{"data":{"text/plain":["3"]},"execution_count":106,"metadata":{"tags":[]},"output_type":"execute_result"}]},{"cell_type":"markdown","metadata":{"id":"2kJObRBHfmOd"},"source":["## Многомерные массивы\n","опциональный материал"]},{"cell_type":"code","metadata":{"id":"XO2pnEo1fmOe","outputId":"a952d7e5-1761-40fe-ded3-6c7f16865697"},"source":["X = np.arange(24).reshape(2, 3, 4)\n","print(X)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[[ 0  1  2  3]\n","  [ 4  5  6  7]\n","  [ 8  9 10 11]]\n","\n"," [[12 13 14 15]\n","  [16 17 18 19]\n","  [20 21 22 23]]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"hAFFHpaBfmOf"},"source":["Суммирование (аналогично остальные операции)"]},{"cell_type":"code","metadata":{"id":"_xcmPEKNfmOf","outputId":"c3080f1a-55e5-4a87-909e-670214bcbfe3"},"source":["# суммируем только по нулевой оси, то есть для фиксированных j и k суммируем только элементы с индексами (*, j, k)\n","print(X.sum(axis=0))\n","# суммируем сразу по двум осям, то есть для фиксированной i суммируем только элементы с индексами (i, *, *)\n","print(X.sum(axis=(1, 2)))"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[12 14 16 18]\n"," [20 22 24 26]\n"," [28 30 32 34]]\n","[ 66 210]\n"]}]},{"cell_type":"markdown","metadata":{"id":"ylh_09YIfmOg"},"source":["## Линейная алгебра"]},{"cell_type":"code","metadata":{"id":"HUXDKhPzfmOg","outputId":"43c6412d-a3d3-49db-9403-fa534d1a925b"},"source":["np.linalg.det(a)"],"execution_count":null,"outputs":[{"data":{"text/plain":["-2.0"]},"execution_count":109,"metadata":{"tags":[]},"output_type":"execute_result"}]},{"cell_type":"markdown","metadata":{"id":"GCcZRK16fmOh"},"source":["Обратная матрица."]},{"cell_type":"code","metadata":{"id":"UOUFtpvIfmOh","outputId":"3048abe5-daec-4fed-9443-d317c80d962a"},"source":["a1 = np.linalg.inv(a)\n","print(a1)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[-1.5  0.5]\n"," [ 1.   0. ]]\n"]}]},{"cell_type":"code","metadata":{"id":"QBvEGytEfmOi","outputId":"a1105b92-5eb0-440c-da3d-6d6b6cb6d6d1"},"source":["print(a @ a1)\n","print(a1 @ a)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[1. 0.]\n"," [0. 1.]]\n","[[1. 0.]\n"," [0. 1.]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"PJQAQQLgfmOj"},"source":["Решение линейной системы $au=v$."]},{"cell_type":"code","metadata":{"id":"6rqLKKyrfmOj","outputId":"d01873be-a893-4a0e-9984-a150bf24db0a"},"source":["v = np.array([0, 1], dtype=np.float64)\n","print(a1 @ v)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[0.5 0. ]\n"]}]},{"cell_type":"code","metadata":{"id":"nALBpIIPfmOk","outputId":"64b4ca5c-f035-4923-805c-6a260ae42a30"},"source":["u = np.linalg.solve(a, v)\n","print(u)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[0.5 0. ]\n"]}]},{"cell_type":"markdown","metadata":{"id":"AQNFE30dfmOl"},"source":["Проверим."]},{"cell_type":"code","metadata":{"id":"YYWwTAfmfmOl","outputId":"d9513a41-77f4-4490-86e4-94e7ce1df3ad"},"source":["print(a @ u - v)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[0. 0.]\n"]}]},{"cell_type":"markdown","metadata":{"id":"-nPqQZ32fmOm"},"source":["Собственные значения и собственные векторы: $a u_i = \\lambda_i u_i$. `l` - одномерный массив собственных значений $\\lambda_i$, столбцы матрицы $u$ - собственные векторы $u_i$."]},{"cell_type":"code","metadata":{"id":"Aby8Q0UqfmOm","outputId":"6b596de2-7f39-4c32-d7e3-5a142a8096b6"},"source":["l, u = np.linalg.eig(a)\n","print(l)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[-0.56155281  3.56155281]\n"]}]},{"cell_type":"code","metadata":{"id":"M9p_mn3WfmOn","outputId":"6650b190-e1e2-487c-e922-6b93d59542e7"},"source":["print(u)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[-0.87192821 -0.27032301]\n"," [ 0.48963374 -0.96276969]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"_ri8pDJofmOo"},"source":["Проверим."]},{"cell_type":"code","metadata":{"id":"Eu0hgYVifmOo","outputId":"7b54885c-0981-4cd0-8402-1c23a62e34d0"},"source":["for i in range(2):\n","    print(a @ u[:, i] - l[i] * u[:, i])"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[0.00000000e+00 1.66533454e-16]\n","[ 0.0000000e+00 -4.4408921e-16]\n"]}]},{"cell_type":"markdown","metadata":{"id":"FGLpkdP5fmOo"},"source":["Функция `diag` от одномерного массива строит диагональную матрицу; от квадратной матрицы - возвращает одномерный массив её диагональных элементов."]},{"cell_type":"code","metadata":{"id":"R_pGiyEMfmOp","outputId":"8ed7efcb-1ff8-4c71-f5fb-0f3557e151c8"},"source":["L = np.diag(l)\n","print(L)\n","print(np.diag(L))"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[-0.56155281  0.        ]\n"," [ 0.          3.56155281]]\n","[-0.56155281  3.56155281]\n"]}]},{"cell_type":"markdown","metadata":{"id":"jQeO5yw4fmOq"},"source":["Все уравнения $a u_i = \\lambda_i u_i$ можно собрать в одно матричное уравнение $a u = u \\Lambda$, где $\\Lambda$ - диагональная матрица с собственными значениями $\\lambda_i$ на диагонали."]},{"cell_type":"code","metadata":{"id":"c6Q3_hj-fmOq","outputId":"7555d5ba-5b0d-4e7a-d40f-3735a047646f"},"source":["print(a @ u - u @ L)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[0.00000000e+00 0.00000000e+00]\n"," [1.11022302e-16 0.00000000e+00]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"lcnbDsgQfmOr"},"source":["Поэтому $u^{-1} a u = \\Lambda$."]},{"cell_type":"code","metadata":{"id":"zJi2SX33fmOr","outputId":"b2afb7a1-c46b-488a-a95c-557310edc951"},"source":["print(np.linalg.inv(u) @ a @ u)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[-5.61552813e-01  1.47801400e-17]\n"," [-1.25939966e-16  3.56155281e+00]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"LR99sNMzfmOs"},"source":["Найдём теперь левые собственные векторы $v_i a = \\lambda_i v_i$ (собственные значения $\\lambda_i$ те же самые)."]},{"cell_type":"code","metadata":{"id":"-VlU9KTvfmOs","outputId":"b0eac9e0-0c94-4c65-d22b-958675be97a0"},"source":["l, v = np.linalg.eig(a.T)\n","print(l)\n","print(v)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[-0.56155281  3.56155281]\n","[[-0.96276969 -0.48963374]\n"," [ 0.27032301 -0.87192821]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"lceOEiLDfmOt"},"source":["Собственные векторы нормированы на 1."]},{"cell_type":"code","metadata":{"id":"XVWK3_kffmOt","outputId":"9272190c-bc2c-491c-b4b4-c68a68567612"},"source":["print(u.T @ u)\n","print(v.T @ v)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[ 1.         -0.23570226]\n"," [-0.23570226  1.        ]]\n","[[1.         0.23570226]\n"," [0.23570226 1.        ]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"OEzELGlOfmOu"},"source":["Левые и правые собственные векторы, соответствующие разным собственным значениям, ортогональны, потому что $v_i a u_j = \\lambda_i v_i u_j = \\lambda_j v_i u_j$."]},{"cell_type":"code","metadata":{"id":"JENmli6ufmOu","outputId":"b29f7d71-f23f-4f28-ba0c-243a51727741"},"source":["print(v.T @ u)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["[[ 9.71825316e-01 -7.57355847e-18]\n"," [-4.34446700e-17  9.71825316e-01]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"wLoVDMQnfmOv"},"source":["# Интегрирование"]},{"cell_type":"code","metadata":{"id":"vzUcnhqqfmOv"},"source":["from scipy.integrate import quad, odeint\n","from scipy.special import erf"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"r7kaCmHkfmOw"},"source":["def f(x):\n","    return np.exp(-x ** 2)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6bmt_YF3fmOw"},"source":["Адаптивное численное интегрирование (может быть до бесконечности). `err` - оценка ошибки."]},{"cell_type":"code","metadata":{"id":"f-XOO2zkfmOw","outputId":"ad9f532e-d4d9-4242-dc31-107a23921b6b"},"source":["res, err = quad(f, 0, np.inf)\n","print(np.sqrt(np.pi) / 2, res, err)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["0.8862269254527579 0.8862269254527579 7.101318390472462e-09\n"]}]},{"cell_type":"code","metadata":{"id":"qx4wdJ8ufmOx","outputId":"98075546-907c-4579-ccff-1c7145b5e702"},"source":["res, err =  quad(f, 0, 1)\n","print(np.sqrt(np.pi) / 2 * erf(1), res, err)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["0.7468241328124269 0.7468241328124271 8.291413475940725e-15\n"]}]},{"cell_type":"markdown","metadata":{"id":"QeBH-jT4fmOy"},"source":["## Сохранение в файл и чтение из файла"]},{"cell_type":"code","metadata":{"id":"En20hxbWfmOy"},"source":["x = np.arange(0, 25, 0.5).reshape((5, 10))\n","\n","# Сохраняем в файл example.txt данные x в формате с двумя точками после запятой и разделителем ';'\n","np.savetxt('example.txt', x, fmt='%.2f', delimiter=';')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VIUIkTyLfmOz"},"source":["Получится такой файл"]},{"cell_type":"code","metadata":{"id":"VLOPpXdBfmOz","outputId":"5c74bac8-911e-460c-c719-9e794a762130"},"source":["!cat example.txt"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["0.00;0.50;1.00;1.50;2.00;2.50;3.00;3.50;4.00;4.50\r\n","5.00;5.50;6.00;6.50;7.00;7.50;8.00;8.50;9.00;9.50\r\n","10.00;10.50;11.00;11.50;12.00;12.50;13.00;13.50;14.00;14.50\r\n","15.00;15.50;16.00;16.50;17.00;17.50;18.00;18.50;19.00;19.50\r\n","20.00;20.50;21.00;21.50;22.00;22.50;23.00;23.50;24.00;24.50\r\n"]}]}]}